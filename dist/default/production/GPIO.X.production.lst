

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri May 30 20:49:59 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 17/01/2025 GMT
    30                           ; 
    31                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4620 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000FE0                     bsr             equ	4064
    64   000FE9                     fsr0            equ	4073
    65   000FEA                     fsr0h           equ	4074
    66   000FE9                     fsr0l           equ	4073
    67   000FE1                     fsr1            equ	4065
    68   000FE2                     fsr1h           equ	4066
    69   000FE1                     fsr1l           equ	4065
    70   000FD9                     fsr2            equ	4057
    71   000FDA                     fsr2h           equ	4058
    72   000FD9                     fsr2l           equ	4057
    73   000FEF                     indf0           equ	4079
    74   000FE7                     indf1           equ	4071
    75   000FDF                     indf2           equ	4063
    76   000FF2                     intcon          equ	4082
    77   000000                     nvmcon          equ	0
    78   000FF9                     pcl             equ	4089
    79   000FFA                     pclath          equ	4090
    80   000FFB                     pclatu          equ	4091
    81   000FEB                     plusw0          equ	4075
    82   000FE3                     plusw1          equ	4067
    83   000FDB                     plusw2          equ	4059
    84   000FED                     postdec0        equ	4077
    85   000FE5                     postdec1        equ	4069
    86   000FDD                     postdec2        equ	4061
    87   000FEE                     postinc0        equ	4078
    88   000FE6                     postinc1        equ	4070
    89   000FDE                     postinc2        equ	4062
    90   000FEC                     preinc0         equ	4076
    91   000FE4                     preinc1         equ	4068
    92   000FDC                     preinc2         equ	4060
    93   000FF3                     prod            equ	4083
    94   000FF4                     prodh           equ	4084
    95   000FF3                     prodl           equ	4083
    96   000FD8                     status          equ	4056
    97   000FF5                     tablat          equ	4085
    98   000FF6                     tblptr          equ	4086
    99   000FF7                     tblptrh         equ	4087
   100   000FF6                     tblptrl         equ	4086
   101   000FF8                     tblptru         equ	4088
   102   000FFD                     tosl            equ	4093
   103   000FE8                     wreg            equ	4072
   104   000F80                     PORTA           equ	3968	;# 
   105   000F81                     PORTB           equ	3969	;# 
   106   000F82                     PORTC           equ	3970	;# 
   107   000F83                     PORTD           equ	3971	;# 
   108   000F84                     PORTE           equ	3972	;# 
   109   000F89                     LATA            equ	3977	;# 
   110   000F8A                     LATB            equ	3978	;# 
   111   000F8B                     LATC            equ	3979	;# 
   112   000F8C                     LATD            equ	3980	;# 
   113   000F8D                     LATE            equ	3981	;# 
   114   000F92                     TRISA           equ	3986	;# 
   115   000F92                     DDRA            equ	3986	;# 
   116   000F93                     TRISB           equ	3987	;# 
   117   000F93                     DDRB            equ	3987	;# 
   118   000F94                     TRISC           equ	3988	;# 
   119   000F94                     DDRC            equ	3988	;# 
   120   000F95                     TRISD           equ	3989	;# 
   121   000F95                     DDRD            equ	3989	;# 
   122   000F96                     TRISE           equ	3990	;# 
   123   000F96                     DDRE            equ	3990	;# 
   124   000F9B                     OSCTUNE         equ	3995	;# 
   125   000F9D                     PIE1            equ	3997	;# 
   126   000F9E                     PIR1            equ	3998	;# 
   127   000F9F                     IPR1            equ	3999	;# 
   128   000FA0                     PIE2            equ	4000	;# 
   129   000FA1                     PIR2            equ	4001	;# 
   130   000FA2                     IPR2            equ	4002	;# 
   131   000FA6                     EECON1          equ	4006	;# 
   132   000FA7                     EECON2          equ	4007	;# 
   133   000FA8                     EEDATA          equ	4008	;# 
   134   000FA9                     EEADR           equ	4009	;# 
   135   000FAA                     EEADRH          equ	4010	;# 
   136   000FAB                     RCSTA           equ	4011	;# 
   137   000FAB                     RCSTA1          equ	4011	;# 
   138   000FAC                     TXSTA           equ	4012	;# 
   139   000FAC                     TXSTA1          equ	4012	;# 
   140   000FAD                     TXREG           equ	4013	;# 
   141   000FAD                     TXREG1          equ	4013	;# 
   142   000FAE                     RCREG           equ	4014	;# 
   143   000FAE                     RCREG1          equ	4014	;# 
   144   000FAF                     SPBRG           equ	4015	;# 
   145   000FAF                     SPBRG1          equ	4015	;# 
   146   000FB0                     SPBRGH          equ	4016	;# 
   147   000FB1                     T3CON           equ	4017	;# 
   148   000FB2                     TMR3            equ	4018	;# 
   149   000FB2                     TMR3L           equ	4018	;# 
   150   000FB3                     TMR3H           equ	4019	;# 
   151   000FB4                     CMCON           equ	4020	;# 
   152   000FB5                     CVRCON          equ	4021	;# 
   153   000FB6                     ECCP1AS         equ	4022	;# 
   154   000FB7                     PWM1CON         equ	4023	;# 
   155   000FB8                     BAUDCON         equ	4024	;# 
   156   000FB8                     BAUDCTL         equ	4024	;# 
   157   000FBA                     CCP2CON         equ	4026	;# 
   158   000FBB                     CCPR2           equ	4027	;# 
   159   000FBB                     CCPR2L          equ	4027	;# 
   160   000FBC                     CCPR2H          equ	4028	;# 
   161   000FBD                     CCP1CON         equ	4029	;# 
   162   000FBE                     CCPR1           equ	4030	;# 
   163   000FBE                     CCPR1L          equ	4030	;# 
   164   000FBF                     CCPR1H          equ	4031	;# 
   165   000FC0                     ADCON2          equ	4032	;# 
   166   000FC1                     ADCON1          equ	4033	;# 
   167   000FC2                     ADCON0          equ	4034	;# 
   168   000FC3                     ADRES           equ	4035	;# 
   169   000FC3                     ADRESL          equ	4035	;# 
   170   000FC4                     ADRESH          equ	4036	;# 
   171   000FC5                     SSPCON2         equ	4037	;# 
   172   000FC6                     SSPCON1         equ	4038	;# 
   173   000FC7                     SSPSTAT         equ	4039	;# 
   174   000FC8                     SSPADD          equ	4040	;# 
   175   000FC9                     SSPBUF          equ	4041	;# 
   176   000FCA                     T2CON           equ	4042	;# 
   177   000FCB                     PR2             equ	4043	;# 
   178   000FCB                     MEMCON          equ	4043	;# 
   179   000FCC                     TMR2            equ	4044	;# 
   180   000FCD                     T1CON           equ	4045	;# 
   181   000FCE                     TMR1            equ	4046	;# 
   182   000FCE                     TMR1L           equ	4046	;# 
   183   000FCF                     TMR1H           equ	4047	;# 
   184   000FD0                     RCON            equ	4048	;# 
   185   000FD1                     WDTCON          equ	4049	;# 
   186   000FD2                     HLVDCON         equ	4050	;# 
   187   000FD2                     LVDCON          equ	4050	;# 
   188   000FD3                     OSCCON          equ	4051	;# 
   189   000FD5                     T0CON           equ	4053	;# 
   190   000FD6                     TMR0            equ	4054	;# 
   191   000FD6                     TMR0L           equ	4054	;# 
   192   000FD7                     TMR0H           equ	4055	;# 
   193   000FD8                     STATUS          equ	4056	;# 
   194   000FD9                     FSR2            equ	4057	;# 
   195   000FD9                     FSR2L           equ	4057	;# 
   196   000FDA                     FSR2H           equ	4058	;# 
   197   000FDB                     PLUSW2          equ	4059	;# 
   198   000FDC                     PREINC2         equ	4060	;# 
   199   000FDD                     POSTDEC2        equ	4061	;# 
   200   000FDE                     POSTINC2        equ	4062	;# 
   201   000FDF                     INDF2           equ	4063	;# 
   202   000FE0                     BSR             equ	4064	;# 
   203   000FE1                     FSR1            equ	4065	;# 
   204   000FE1                     FSR1L           equ	4065	;# 
   205   000FE2                     FSR1H           equ	4066	;# 
   206   000FE3                     PLUSW1          equ	4067	;# 
   207   000FE4                     PREINC1         equ	4068	;# 
   208   000FE5                     POSTDEC1        equ	4069	;# 
   209   000FE6                     POSTINC1        equ	4070	;# 
   210   000FE7                     INDF1           equ	4071	;# 
   211   000FE8                     WREG            equ	4072	;# 
   212   000FE9                     FSR0            equ	4073	;# 
   213   000FE9                     FSR0L           equ	4073	;# 
   214   000FEA                     FSR0H           equ	4074	;# 
   215   000FEB                     PLUSW0          equ	4075	;# 
   216   000FEC                     PREINC0         equ	4076	;# 
   217   000FED                     POSTDEC0        equ	4077	;# 
   218   000FEE                     POSTINC0        equ	4078	;# 
   219   000FEF                     INDF0           equ	4079	;# 
   220   000FF0                     INTCON3         equ	4080	;# 
   221   000FF1                     INTCON2         equ	4081	;# 
   222   000FF2                     INTCON          equ	4082	;# 
   223   000FF3                     PROD            equ	4083	;# 
   224   000FF3                     PRODL           equ	4083	;# 
   225   000FF4                     PRODH           equ	4084	;# 
   226   000FF5                     TABLAT          equ	4085	;# 
   227   000FF6                     TBLPTR          equ	4086	;# 
   228   000FF6                     TBLPTRL         equ	4086	;# 
   229   000FF7                     TBLPTRH         equ	4087	;# 
   230   000FF8                     TBLPTRU         equ	4088	;# 
   231   000FF9                     PCLAT           equ	4089	;# 
   232   000FF9                     PC              equ	4089	;# 
   233   000FF9                     PCL             equ	4089	;# 
   234   000FFA                     PCLATH          equ	4090	;# 
   235   000FFB                     PCLATU          equ	4091	;# 
   236   000FFC                     STKPTR          equ	4092	;# 
   237   000FFD                     TOS             equ	4093	;# 
   238   000FFD                     TOSL            equ	4093	;# 
   239   000FFE                     TOSH            equ	4094	;# 
   240   000FFF                     TOSU            equ	4095	;# 
   241   000F80                     PORTA           equ	3968	;# 
   242   000F81                     PORTB           equ	3969	;# 
   243   000F82                     PORTC           equ	3970	;# 
   244   000F83                     PORTD           equ	3971	;# 
   245   000F84                     PORTE           equ	3972	;# 
   246   000F89                     LATA            equ	3977	;# 
   247   000F8A                     LATB            equ	3978	;# 
   248   000F8B                     LATC            equ	3979	;# 
   249   000F8C                     LATD            equ	3980	;# 
   250   000F8D                     LATE            equ	3981	;# 
   251   000F92                     TRISA           equ	3986	;# 
   252   000F92                     DDRA            equ	3986	;# 
   253   000F93                     TRISB           equ	3987	;# 
   254   000F93                     DDRB            equ	3987	;# 
   255   000F94                     TRISC           equ	3988	;# 
   256   000F94                     DDRC            equ	3988	;# 
   257   000F95                     TRISD           equ	3989	;# 
   258   000F95                     DDRD            equ	3989	;# 
   259   000F96                     TRISE           equ	3990	;# 
   260   000F96                     DDRE            equ	3990	;# 
   261   000F9B                     OSCTUNE         equ	3995	;# 
   262   000F9D                     PIE1            equ	3997	;# 
   263   000F9E                     PIR1            equ	3998	;# 
   264   000F9F                     IPR1            equ	3999	;# 
   265   000FA0                     PIE2            equ	4000	;# 
   266   000FA1                     PIR2            equ	4001	;# 
   267   000FA2                     IPR2            equ	4002	;# 
   268   000FA6                     EECON1          equ	4006	;# 
   269   000FA7                     EECON2          equ	4007	;# 
   270   000FA8                     EEDATA          equ	4008	;# 
   271   000FA9                     EEADR           equ	4009	;# 
   272   000FAA                     EEADRH          equ	4010	;# 
   273   000FAB                     RCSTA           equ	4011	;# 
   274   000FAB                     RCSTA1          equ	4011	;# 
   275   000FAC                     TXSTA           equ	4012	;# 
   276   000FAC                     TXSTA1          equ	4012	;# 
   277   000FAD                     TXREG           equ	4013	;# 
   278   000FAD                     TXREG1          equ	4013	;# 
   279   000FAE                     RCREG           equ	4014	;# 
   280   000FAE                     RCREG1          equ	4014	;# 
   281   000FAF                     SPBRG           equ	4015	;# 
   282   000FAF                     SPBRG1          equ	4015	;# 
   283   000FB0                     SPBRGH          equ	4016	;# 
   284   000FB1                     T3CON           equ	4017	;# 
   285   000FB2                     TMR3            equ	4018	;# 
   286   000FB2                     TMR3L           equ	4018	;# 
   287   000FB3                     TMR3H           equ	4019	;# 
   288   000FB4                     CMCON           equ	4020	;# 
   289   000FB5                     CVRCON          equ	4021	;# 
   290   000FB6                     ECCP1AS         equ	4022	;# 
   291   000FB7                     PWM1CON         equ	4023	;# 
   292   000FB8                     BAUDCON         equ	4024	;# 
   293   000FB8                     BAUDCTL         equ	4024	;# 
   294   000FBA                     CCP2CON         equ	4026	;# 
   295   000FBB                     CCPR2           equ	4027	;# 
   296   000FBB                     CCPR2L          equ	4027	;# 
   297   000FBC                     CCPR2H          equ	4028	;# 
   298   000FBD                     CCP1CON         equ	4029	;# 
   299   000FBE                     CCPR1           equ	4030	;# 
   300   000FBE                     CCPR1L          equ	4030	;# 
   301   000FBF                     CCPR1H          equ	4031	;# 
   302   000FC0                     ADCON2          equ	4032	;# 
   303   000FC1                     ADCON1          equ	4033	;# 
   304   000FC2                     ADCON0          equ	4034	;# 
   305   000FC3                     ADRES           equ	4035	;# 
   306   000FC3                     ADRESL          equ	4035	;# 
   307   000FC4                     ADRESH          equ	4036	;# 
   308   000FC5                     SSPCON2         equ	4037	;# 
   309   000FC6                     SSPCON1         equ	4038	;# 
   310   000FC7                     SSPSTAT         equ	4039	;# 
   311   000FC8                     SSPADD          equ	4040	;# 
   312   000FC9                     SSPBUF          equ	4041	;# 
   313   000FCA                     T2CON           equ	4042	;# 
   314   000FCB                     PR2             equ	4043	;# 
   315   000FCB                     MEMCON          equ	4043	;# 
   316   000FCC                     TMR2            equ	4044	;# 
   317   000FCD                     T1CON           equ	4045	;# 
   318   000FCE                     TMR1            equ	4046	;# 
   319   000FCE                     TMR1L           equ	4046	;# 
   320   000FCF                     TMR1H           equ	4047	;# 
   321   000FD0                     RCON            equ	4048	;# 
   322   000FD1                     WDTCON          equ	4049	;# 
   323   000FD2                     HLVDCON         equ	4050	;# 
   324   000FD2                     LVDCON          equ	4050	;# 
   325   000FD3                     OSCCON          equ	4051	;# 
   326   000FD5                     T0CON           equ	4053	;# 
   327   000FD6                     TMR0            equ	4054	;# 
   328   000FD6                     TMR0L           equ	4054	;# 
   329   000FD7                     TMR0H           equ	4055	;# 
   330   000FD8                     STATUS          equ	4056	;# 
   331   000FD9                     FSR2            equ	4057	;# 
   332   000FD9                     FSR2L           equ	4057	;# 
   333   000FDA                     FSR2H           equ	4058	;# 
   334   000FDB                     PLUSW2          equ	4059	;# 
   335   000FDC                     PREINC2         equ	4060	;# 
   336   000FDD                     POSTDEC2        equ	4061	;# 
   337   000FDE                     POSTINC2        equ	4062	;# 
   338   000FDF                     INDF2           equ	4063	;# 
   339   000FE0                     BSR             equ	4064	;# 
   340   000FE1                     FSR1            equ	4065	;# 
   341   000FE1                     FSR1L           equ	4065	;# 
   342   000FE2                     FSR1H           equ	4066	;# 
   343   000FE3                     PLUSW1          equ	4067	;# 
   344   000FE4                     PREINC1         equ	4068	;# 
   345   000FE5                     POSTDEC1        equ	4069	;# 
   346   000FE6                     POSTINC1        equ	4070	;# 
   347   000FE7                     INDF1           equ	4071	;# 
   348   000FE8                     WREG            equ	4072	;# 
   349   000FE9                     FSR0            equ	4073	;# 
   350   000FE9                     FSR0L           equ	4073	;# 
   351   000FEA                     FSR0H           equ	4074	;# 
   352   000FEB                     PLUSW0          equ	4075	;# 
   353   000FEC                     PREINC0         equ	4076	;# 
   354   000FED                     POSTDEC0        equ	4077	;# 
   355   000FEE                     POSTINC0        equ	4078	;# 
   356   000FEF                     INDF0           equ	4079	;# 
   357   000FF0                     INTCON3         equ	4080	;# 
   358   000FF1                     INTCON2         equ	4081	;# 
   359   000FF2                     INTCON          equ	4082	;# 
   360   000FF3                     PROD            equ	4083	;# 
   361   000FF3                     PRODL           equ	4083	;# 
   362   000FF4                     PRODH           equ	4084	;# 
   363   000FF5                     TABLAT          equ	4085	;# 
   364   000FF6                     TBLPTR          equ	4086	;# 
   365   000FF6                     TBLPTRL         equ	4086	;# 
   366   000FF7                     TBLPTRH         equ	4087	;# 
   367   000FF8                     TBLPTRU         equ	4088	;# 
   368   000FF9                     PCLAT           equ	4089	;# 
   369   000FF9                     PC              equ	4089	;# 
   370   000FF9                     PCL             equ	4089	;# 
   371   000FFA                     PCLATH          equ	4090	;# 
   372   000FFB                     PCLATU          equ	4091	;# 
   373   000FFC                     STKPTR          equ	4092	;# 
   374   000FFD                     TOS             equ	4093	;# 
   375   000FFD                     TOSL            equ	4093	;# 
   376   000FFE                     TOSH            equ	4094	;# 
   377   000FFF                     TOSU            equ	4095	;# 
   378   000F80                     PORTA           equ	3968	;# 
   379   000F81                     PORTB           equ	3969	;# 
   380   000F82                     PORTC           equ	3970	;# 
   381   000F83                     PORTD           equ	3971	;# 
   382   000F84                     PORTE           equ	3972	;# 
   383   000F89                     LATA            equ	3977	;# 
   384   000F8A                     LATB            equ	3978	;# 
   385   000F8B                     LATC            equ	3979	;# 
   386   000F8C                     LATD            equ	3980	;# 
   387   000F8D                     LATE            equ	3981	;# 
   388   000F92                     TRISA           equ	3986	;# 
   389   000F92                     DDRA            equ	3986	;# 
   390   000F93                     TRISB           equ	3987	;# 
   391   000F93                     DDRB            equ	3987	;# 
   392   000F94                     TRISC           equ	3988	;# 
   393   000F94                     DDRC            equ	3988	;# 
   394   000F95                     TRISD           equ	3989	;# 
   395   000F95                     DDRD            equ	3989	;# 
   396   000F96                     TRISE           equ	3990	;# 
   397   000F96                     DDRE            equ	3990	;# 
   398   000F9B                     OSCTUNE         equ	3995	;# 
   399   000F9D                     PIE1            equ	3997	;# 
   400   000F9E                     PIR1            equ	3998	;# 
   401   000F9F                     IPR1            equ	3999	;# 
   402   000FA0                     PIE2            equ	4000	;# 
   403   000FA1                     PIR2            equ	4001	;# 
   404   000FA2                     IPR2            equ	4002	;# 
   405   000FA6                     EECON1          equ	4006	;# 
   406   000FA7                     EECON2          equ	4007	;# 
   407   000FA8                     EEDATA          equ	4008	;# 
   408   000FA9                     EEADR           equ	4009	;# 
   409   000FAA                     EEADRH          equ	4010	;# 
   410   000FAB                     RCSTA           equ	4011	;# 
   411   000FAB                     RCSTA1          equ	4011	;# 
   412   000FAC                     TXSTA           equ	4012	;# 
   413   000FAC                     TXSTA1          equ	4012	;# 
   414   000FAD                     TXREG           equ	4013	;# 
   415   000FAD                     TXREG1          equ	4013	;# 
   416   000FAE                     RCREG           equ	4014	;# 
   417   000FAE                     RCREG1          equ	4014	;# 
   418   000FAF                     SPBRG           equ	4015	;# 
   419   000FAF                     SPBRG1          equ	4015	;# 
   420   000FB0                     SPBRGH          equ	4016	;# 
   421   000FB1                     T3CON           equ	4017	;# 
   422   000FB2                     TMR3            equ	4018	;# 
   423   000FB2                     TMR3L           equ	4018	;# 
   424   000FB3                     TMR3H           equ	4019	;# 
   425   000FB4                     CMCON           equ	4020	;# 
   426   000FB5                     CVRCON          equ	4021	;# 
   427   000FB6                     ECCP1AS         equ	4022	;# 
   428   000FB7                     PWM1CON         equ	4023	;# 
   429   000FB8                     BAUDCON         equ	4024	;# 
   430   000FB8                     BAUDCTL         equ	4024	;# 
   431   000FBA                     CCP2CON         equ	4026	;# 
   432   000FBB                     CCPR2           equ	4027	;# 
   433   000FBB                     CCPR2L          equ	4027	;# 
   434   000FBC                     CCPR2H          equ	4028	;# 
   435   000FBD                     CCP1CON         equ	4029	;# 
   436   000FBE                     CCPR1           equ	4030	;# 
   437   000FBE                     CCPR1L          equ	4030	;# 
   438   000FBF                     CCPR1H          equ	4031	;# 
   439   000FC0                     ADCON2          equ	4032	;# 
   440   000FC1                     ADCON1          equ	4033	;# 
   441   000FC2                     ADCON0          equ	4034	;# 
   442   000FC3                     ADRES           equ	4035	;# 
   443   000FC3                     ADRESL          equ	4035	;# 
   444   000FC4                     ADRESH          equ	4036	;# 
   445   000FC5                     SSPCON2         equ	4037	;# 
   446   000FC6                     SSPCON1         equ	4038	;# 
   447   000FC7                     SSPSTAT         equ	4039	;# 
   448   000FC8                     SSPADD          equ	4040	;# 
   449   000FC9                     SSPBUF          equ	4041	;# 
   450   000FCA                     T2CON           equ	4042	;# 
   451   000FCB                     PR2             equ	4043	;# 
   452   000FCB                     MEMCON          equ	4043	;# 
   453   000FCC                     TMR2            equ	4044	;# 
   454   000FCD                     T1CON           equ	4045	;# 
   455   000FCE                     TMR1            equ	4046	;# 
   456   000FCE                     TMR1L           equ	4046	;# 
   457   000FCF                     TMR1H           equ	4047	;# 
   458   000FD0                     RCON            equ	4048	;# 
   459   000FD1                     WDTCON          equ	4049	;# 
   460   000FD2                     HLVDCON         equ	4050	;# 
   461   000FD2                     LVDCON          equ	4050	;# 
   462   000FD3                     OSCCON          equ	4051	;# 
   463   000FD5                     T0CON           equ	4053	;# 
   464   000FD6                     TMR0            equ	4054	;# 
   465   000FD6                     TMR0L           equ	4054	;# 
   466   000FD7                     TMR0H           equ	4055	;# 
   467   000FD8                     STATUS          equ	4056	;# 
   468   000FD9                     FSR2            equ	4057	;# 
   469   000FD9                     FSR2L           equ	4057	;# 
   470   000FDA                     FSR2H           equ	4058	;# 
   471   000FDB                     PLUSW2          equ	4059	;# 
   472   000FDC                     PREINC2         equ	4060	;# 
   473   000FDD                     POSTDEC2        equ	4061	;# 
   474   000FDE                     POSTINC2        equ	4062	;# 
   475   000FDF                     INDF2           equ	4063	;# 
   476   000FE0                     BSR             equ	4064	;# 
   477   000FE1                     FSR1            equ	4065	;# 
   478   000FE1                     FSR1L           equ	4065	;# 
   479   000FE2                     FSR1H           equ	4066	;# 
   480   000FE3                     PLUSW1          equ	4067	;# 
   481   000FE4                     PREINC1         equ	4068	;# 
   482   000FE5                     POSTDEC1        equ	4069	;# 
   483   000FE6                     POSTINC1        equ	4070	;# 
   484   000FE7                     INDF1           equ	4071	;# 
   485   000FE8                     WREG            equ	4072	;# 
   486   000FE9                     FSR0            equ	4073	;# 
   487   000FE9                     FSR0L           equ	4073	;# 
   488   000FEA                     FSR0H           equ	4074	;# 
   489   000FEB                     PLUSW0          equ	4075	;# 
   490   000FEC                     PREINC0         equ	4076	;# 
   491   000FED                     POSTDEC0        equ	4077	;# 
   492   000FEE                     POSTINC0        equ	4078	;# 
   493   000FEF                     INDF0           equ	4079	;# 
   494   000FF0                     INTCON3         equ	4080	;# 
   495   000FF1                     INTCON2         equ	4081	;# 
   496   000FF2                     INTCON          equ	4082	;# 
   497   000FF3                     PROD            equ	4083	;# 
   498   000FF3                     PRODL           equ	4083	;# 
   499   000FF4                     PRODH           equ	4084	;# 
   500   000FF5                     TABLAT          equ	4085	;# 
   501   000FF6                     TBLPTR          equ	4086	;# 
   502   000FF6                     TBLPTRL         equ	4086	;# 
   503   000FF7                     TBLPTRH         equ	4087	;# 
   504   000FF8                     TBLPTRU         equ	4088	;# 
   505   000FF9                     PCLAT           equ	4089	;# 
   506   000FF9                     PC              equ	4089	;# 
   507   000FF9                     PCL             equ	4089	;# 
   508   000FFA                     PCLATH          equ	4090	;# 
   509   000FFB                     PCLATU          equ	4091	;# 
   510   000FFC                     STKPTR          equ	4092	;# 
   511   000FFD                     TOS             equ	4093	;# 
   512   000FFD                     TOSL            equ	4093	;# 
   513   000FFE                     TOSH            equ	4094	;# 
   514   000FFF                     TOSU            equ	4095	;# 
   515   000F80                     PORTA           equ	3968	;# 
   516   000F81                     PORTB           equ	3969	;# 
   517   000F82                     PORTC           equ	3970	;# 
   518   000F83                     PORTD           equ	3971	;# 
   519   000F84                     PORTE           equ	3972	;# 
   520   000F89                     LATA            equ	3977	;# 
   521   000F8A                     LATB            equ	3978	;# 
   522   000F8B                     LATC            equ	3979	;# 
   523   000F8C                     LATD            equ	3980	;# 
   524   000F8D                     LATE            equ	3981	;# 
   525   000F92                     TRISA           equ	3986	;# 
   526   000F92                     DDRA            equ	3986	;# 
   527   000F93                     TRISB           equ	3987	;# 
   528   000F93                     DDRB            equ	3987	;# 
   529   000F94                     TRISC           equ	3988	;# 
   530   000F94                     DDRC            equ	3988	;# 
   531   000F95                     TRISD           equ	3989	;# 
   532   000F95                     DDRD            equ	3989	;# 
   533   000F96                     TRISE           equ	3990	;# 
   534   000F96                     DDRE            equ	3990	;# 
   535   000F9B                     OSCTUNE         equ	3995	;# 
   536   000F9D                     PIE1            equ	3997	;# 
   537   000F9E                     PIR1            equ	3998	;# 
   538   000F9F                     IPR1            equ	3999	;# 
   539   000FA0                     PIE2            equ	4000	;# 
   540   000FA1                     PIR2            equ	4001	;# 
   541   000FA2                     IPR2            equ	4002	;# 
   542   000FA6                     EECON1          equ	4006	;# 
   543   000FA7                     EECON2          equ	4007	;# 
   544   000FA8                     EEDATA          equ	4008	;# 
   545   000FA9                     EEADR           equ	4009	;# 
   546   000FAA                     EEADRH          equ	4010	;# 
   547   000FAB                     RCSTA           equ	4011	;# 
   548   000FAB                     RCSTA1          equ	4011	;# 
   549   000FAC                     TXSTA           equ	4012	;# 
   550   000FAC                     TXSTA1          equ	4012	;# 
   551   000FAD                     TXREG           equ	4013	;# 
   552   000FAD                     TXREG1          equ	4013	;# 
   553   000FAE                     RCREG           equ	4014	;# 
   554   000FAE                     RCREG1          equ	4014	;# 
   555   000FAF                     SPBRG           equ	4015	;# 
   556   000FAF                     SPBRG1          equ	4015	;# 
   557   000FB0                     SPBRGH          equ	4016	;# 
   558   000FB1                     T3CON           equ	4017	;# 
   559   000FB2                     TMR3            equ	4018	;# 
   560   000FB2                     TMR3L           equ	4018	;# 
   561   000FB3                     TMR3H           equ	4019	;# 
   562   000FB4                     CMCON           equ	4020	;# 
   563   000FB5                     CVRCON          equ	4021	;# 
   564   000FB6                     ECCP1AS         equ	4022	;# 
   565   000FB7                     PWM1CON         equ	4023	;# 
   566   000FB8                     BAUDCON         equ	4024	;# 
   567   000FB8                     BAUDCTL         equ	4024	;# 
   568   000FBA                     CCP2CON         equ	4026	;# 
   569   000FBB                     CCPR2           equ	4027	;# 
   570   000FBB                     CCPR2L          equ	4027	;# 
   571   000FBC                     CCPR2H          equ	4028	;# 
   572   000FBD                     CCP1CON         equ	4029	;# 
   573   000FBE                     CCPR1           equ	4030	;# 
   574   000FBE                     CCPR1L          equ	4030	;# 
   575   000FBF                     CCPR1H          equ	4031	;# 
   576   000FC0                     ADCON2          equ	4032	;# 
   577   000FC1                     ADCON1          equ	4033	;# 
   578   000FC2                     ADCON0          equ	4034	;# 
   579   000FC3                     ADRES           equ	4035	;# 
   580   000FC3                     ADRESL          equ	4035	;# 
   581   000FC4                     ADRESH          equ	4036	;# 
   582   000FC5                     SSPCON2         equ	4037	;# 
   583   000FC6                     SSPCON1         equ	4038	;# 
   584   000FC7                     SSPSTAT         equ	4039	;# 
   585   000FC8                     SSPADD          equ	4040	;# 
   586   000FC9                     SSPBUF          equ	4041	;# 
   587   000FCA                     T2CON           equ	4042	;# 
   588   000FCB                     PR2             equ	4043	;# 
   589   000FCB                     MEMCON          equ	4043	;# 
   590   000FCC                     TMR2            equ	4044	;# 
   591   000FCD                     T1CON           equ	4045	;# 
   592   000FCE                     TMR1            equ	4046	;# 
   593   000FCE                     TMR1L           equ	4046	;# 
   594   000FCF                     TMR1H           equ	4047	;# 
   595   000FD0                     RCON            equ	4048	;# 
   596   000FD1                     WDTCON          equ	4049	;# 
   597   000FD2                     HLVDCON         equ	4050	;# 
   598   000FD2                     LVDCON          equ	4050	;# 
   599   000FD3                     OSCCON          equ	4051	;# 
   600   000FD5                     T0CON           equ	4053	;# 
   601   000FD6                     TMR0            equ	4054	;# 
   602   000FD6                     TMR0L           equ	4054	;# 
   603   000FD7                     TMR0H           equ	4055	;# 
   604   000FD8                     STATUS          equ	4056	;# 
   605   000FD9                     FSR2            equ	4057	;# 
   606   000FD9                     FSR2L           equ	4057	;# 
   607   000FDA                     FSR2H           equ	4058	;# 
   608   000FDB                     PLUSW2          equ	4059	;# 
   609   000FDC                     PREINC2         equ	4060	;# 
   610   000FDD                     POSTDEC2        equ	4061	;# 
   611   000FDE                     POSTINC2        equ	4062	;# 
   612   000FDF                     INDF2           equ	4063	;# 
   613   000FE0                     BSR             equ	4064	;# 
   614   000FE1                     FSR1            equ	4065	;# 
   615   000FE1                     FSR1L           equ	4065	;# 
   616   000FE2                     FSR1H           equ	4066	;# 
   617   000FE3                     PLUSW1          equ	4067	;# 
   618   000FE4                     PREINC1         equ	4068	;# 
   619   000FE5                     POSTDEC1        equ	4069	;# 
   620   000FE6                     POSTINC1        equ	4070	;# 
   621   000FE7                     INDF1           equ	4071	;# 
   622   000FE8                     WREG            equ	4072	;# 
   623   000FE9                     FSR0            equ	4073	;# 
   624   000FE9                     FSR0L           equ	4073	;# 
   625   000FEA                     FSR0H           equ	4074	;# 
   626   000FEB                     PLUSW0          equ	4075	;# 
   627   000FEC                     PREINC0         equ	4076	;# 
   628   000FED                     POSTDEC0        equ	4077	;# 
   629   000FEE                     POSTINC0        equ	4078	;# 
   630   000FEF                     INDF0           equ	4079	;# 
   631   000FF0                     INTCON3         equ	4080	;# 
   632   000FF1                     INTCON2         equ	4081	;# 
   633   000FF2                     INTCON          equ	4082	;# 
   634   000FF3                     PROD            equ	4083	;# 
   635   000FF3                     PRODL           equ	4083	;# 
   636   000FF4                     PRODH           equ	4084	;# 
   637   000FF5                     TABLAT          equ	4085	;# 
   638   000FF6                     TBLPTR          equ	4086	;# 
   639   000FF6                     TBLPTRL         equ	4086	;# 
   640   000FF7                     TBLPTRH         equ	4087	;# 
   641   000FF8                     TBLPTRU         equ	4088	;# 
   642   000FF9                     PCLAT           equ	4089	;# 
   643   000FF9                     PC              equ	4089	;# 
   644   000FF9                     PCL             equ	4089	;# 
   645   000FFA                     PCLATH          equ	4090	;# 
   646   000FFB                     PCLATU          equ	4091	;# 
   647   000FFC                     STKPTR          equ	4092	;# 
   648   000FFD                     TOS             equ	4093	;# 
   649   000FFD                     TOSL            equ	4093	;# 
   650   000FFE                     TOSH            equ	4094	;# 
   651   000FFF                     TOSU            equ	4095	;# 
   652                           
   653                           	psect	idataCOMRAM
   654   0017EE                     __pidataCOMRAM:
   655                           	callstack 0
   656                           
   657                           ;initializer for _bcd_codes
   658   0017EE  00                 	db	0
   659   0017EF  01                 	db	1
   660   0017F0  02                 	db	2
   661   0017F1  03                 	db	3
   662   0017F2  04                 	db	4
   663   0017F3  05                 	db	5
   664   0017F4  06                 	db	6
   665   0017F5  07                 	db	7
   666   0017F6  08                 	db	8
   667   0017F7  09                 	db	9
   668                           
   669                           ;initializer for _lat_registers
   670   0017F8  89                 	db	137
   671   0017F9  0F                 	db	15
   672   0017FA  8A                 	db	138
   673   0017FB  0F                 	db	15
   674   0017FC  8B                 	db	139
   675   0017FD  0F                 	db	15
   676   0017FE  8C                 	db	140
   677   0017FF  0F                 	db	15
   678   001800  8D                 	db	141
   679   001801  0F                 	db	15
   680                           
   681                           ;initializer for _tris_registers
   682   001802  92                 	db	146
   683   001803  0F                 	db	15
   684   001804  93                 	db	147
   685   001805  0F                 	db	15
   686   001806  94                 	db	148
   687   001807  0F                 	db	15
   688   001808  95                 	db	149
   689   001809  0F                 	db	15
   690   00180A  96                 	db	150
   691   00180B  0F                 	db	15
   692                           
   693                           ;initializer for _port_registers
   694   00180C  80                 	db	128
   695   00180D  0F                 	db	15
   696   00180E  81                 	db	129
   697   00180F  0F                 	db	15
   698   001810  82                 	db	130
   699   001811  0F                 	db	15
   700   001812  83                 	db	131
   701   001813  0F                 	db	15
   702   001814  84                 	db	132
   703   001815  0F                 	db	15
   704                           
   705                           ;initializer for _ssegment
   706   001816  18                 	db	24
   707   001817  19                 	db	25
   708   001818  1A                 	db	26
   709   001819  1B                 	db	27
   710   00181A  00                 	db	0
   711                           
   712                           ;initializer for _enable_ssegment2
   713   00181B  01                 	db	1
   714                           
   715                           ;initializer for _green_led
   716   00181C  12                 	db	18
   717                           
   718                           ;initializer for _yellow_led
   719   00181D  0A                 	db	10
   720                           
   721                           ;initializer for _red_led
   722   00181E  02                 	db	2
   723                           
   724                           	psect	nvCOMRAM
   725   000046                     __pnvCOMRAM:
   726                           	callstack 0
   727   000046                     _ret:
   728                           	callstack 0
   729   000046                     	ds	1
   730   000F8D                     _LATE           set	3981
   731   000F8C                     _LATD           set	3980
   732   000F8B                     _LATC           set	3979
   733   000F8A                     _LATB           set	3978
   734   000F89                     _LATA           set	3977
   735   000F96                     _TRISE          set	3990
   736   000F95                     _TRISD          set	3989
   737   000F94                     _TRISC          set	3988
   738   000F93                     _TRISB          set	3987
   739   000F92                     _TRISA          set	3986
   740   000F84                     _PORTE          set	3972
   741   000F83                     _PORTD          set	3971
   742   000F82                     _PORTC          set	3970
   743   000F81                     _PORTB          set	3969
   744   000F80                     _PORTA          set	3968
   745                           
   746                           ; #config settings
   747                           
   748                           	psect	cinit
   749   0017BA                     __pcinit:
   750                           	callstack 0
   751   0017BA                     start_initialization:
   752                           	callstack 0
   753   0017BA                     __initialization:
   754                           	callstack 0
   755                           
   756                           ; Initialize objects allocated to COMRAM (49 bytes)
   757                           ; load TBLPTR registers with __pidataCOMRAM
   758   0017BA  0EEE               	movlw	low __pidataCOMRAM
   759   0017BC  6EF6               	movwf	tblptrl,c
   760   0017BE  0E17               	movlw	high __pidataCOMRAM
   761   0017C0  6EF7               	movwf	tblptrh,c
   762   0017C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   763   0017C4  6EF8               	movwf	tblptru,c
   764   0017C6  EE00  F001         	lfsr	0,__pdataCOMRAM
   765   0017CA  EE10 F031          	lfsr	1,49
   766   0017CE                     copy_data0:
   767   0017CE  0009               	tblrd		*+
   768   0017D0  CFF5 FFEE          	movff	tablat,postinc0
   769   0017D4  50E5               	movf	postdec1,w,c
   770   0017D6  50E1               	movf	fsr1l,w,c
   771   0017D8  E1FA               	bnz	copy_data0
   772                           
   773                           ; Clear objects allocated to COMRAM (5 bytes)
   774   0017DA  6A45               	clrf	(__pbssCOMRAM+4)& (0+255),c
   775   0017DC  6A44               	clrf	(__pbssCOMRAM+3)& (0+255),c
   776   0017DE  6A43               	clrf	(__pbssCOMRAM+2)& (0+255),c
   777   0017E0  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
   778   0017E2  6A41               	clrf	__pbssCOMRAM& (0+255),c
   779   0017E4                     end_of_initialization:
   780                           	callstack 0
   781   0017E4                     __end_of__initialization:
   782                           	callstack 0
   783   0017E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   784   0017E6  6EF8               	movwf	tblptru,c
   785   0017E8  0100               	movlb	0
   786   0017EA  EF71  F00B         	goto	_main	;jump to C main() function
   787                           
   788                           	psect	bssCOMRAM
   789   000041                     __pbssCOMRAM:
   790                           	callstack 0
   791   000041                     led_toggle@F3027:
   792                           	callstack 0
   793   000041                     	ds	1
   794   000042                     led_off@F3022:
   795                           	callstack 0
   796   000042                     	ds	1
   797   000043                     led_on@F3017:
   798                           	callstack 0
   799   000043                     	ds	1
   800   000044                     led_init@F3012:
   801                           	callstack 0
   802   000044                     	ds	1
   803   000045                     _enable_ssegment1:
   804                           	callstack 0
   805   000045                     	ds	1
   806                           
   807                           	psect	dataCOMRAM
   808   000001                     __pdataCOMRAM:
   809                           	callstack 0
   810   000001                     _bcd_codes:
   811                           	callstack 0
   812   000001                     	ds	10
   813   00000B                     _lat_registers:
   814                           	callstack 0
   815   00000B                     	ds	10
   816   000015                     _tris_registers:
   817                           	callstack 0
   818   000015                     	ds	10
   819   00001F                     _port_registers:
   820                           	callstack 0
   821   00001F                     	ds	10
   822   000029                     _ssegment:
   823                           	callstack 0
   824   000029                     	ds	5
   825   00002E                     _enable_ssegment2:
   826                           	callstack 0
   827   00002E                     	ds	1
   828   00002F                     _green_led:
   829                           	callstack 0
   830   00002F                     	ds	1
   831   000030                     _yellow_led:
   832                           	callstack 0
   833   000030                     	ds	1
   834   000031                     _red_led:
   835                           	callstack 0
   836   000031                     	ds	1
   837                           
   838                           	psect	cstackCOMRAM
   839   000032                     __pcstackCOMRAM:
   840                           	callstack 0
   841   000032                     ?___awdiv:
   842                           	callstack 0
   843   000032                     ?___awmod:
   844                           	callstack 0
   845   000032                     gbio_pin_direction_init@pin_config:
   846                           	callstack 0
   847   000032                     gbio_pin_write_logic@pin_config:
   848                           	callstack 0
   849   000032                     ___awdiv@dividend:
   850                           	callstack 0
   851   000032                     ___awmod@dividend:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x0
   855   000032                     	ds	1
   856   000033                     gbio_pin_write_logic@logic:
   857                           	callstack 0
   858   000033                     ??_gbio_pin_direction_init:
   859                           
   860                           ; 1 bytes @ 0x1
   861   000033                     	ds	1
   862   000034                     ___awdiv@divisor:
   863                           	callstack 0
   864   000034                     ___awmod@divisor:
   865                           	callstack 0
   866   000034                     ??_gbio_pin_write_logic:
   867                           
   868                           ; 1 bytes @ 0x2
   869   000034                     	ds	2
   870   000036                     ___awdiv@counter:
   871                           	callstack 0
   872   000036                     ___awmod@counter:
   873                           	callstack 0
   874   000036                     
   875                           ; 1 bytes @ 0x4
   876   000036                     	ds	1
   877   000037                     ___awdiv@sign:
   878                           	callstack 0
   879   000037                     ___awmod@sign:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x5
   883   000037                     	ds	1
   884   000038                     ___awdiv@quotient:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x6
   888   000038                     	ds	1
   889   000039                     led_on@led:
   890                           	callstack 0
   891   000039                     led_off@led:
   892                           	callstack 0
   893   000039                     gbio_pin_init@pin_config:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x7
   897   000039                     	ds	1
   898   00003A                     seven_segment_write_number@ssegment:
   899                           	callstack 0
   900   00003A                     ??_gbio_pin_init:
   901   00003A                     ??_led_on:
   902   00003A                     ??_led_off:
   903                           
   904                           ; 1 bytes @ 0x8
   905   00003A                     	ds	1
   906   00003B                     led_on@ret:
   907                           	callstack 0
   908   00003B                     led_off@ret:
   909                           	callstack 0
   910   00003B                     gbio_pin_init@ret:
   911                           	callstack 0
   912   00003B                     seven_segment_write_number@number:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x9
   916   00003B                     	ds	1
   917   00003C                     led_init@led:
   918                           	callstack 0
   919   00003C                     led_on@pin_obj:
   920                           	callstack 0
   921   00003C                     led_off@pin_obj:
   922                           	callstack 0
   923   00003C                     seven_segment_init@ssegment:
   924                           	callstack 0
   925   00003C                     
   926                           ; 1 bytes @ 0xA
   927   00003C                     	ds	1
   928   00003D                     seven_segment_init@ret:
   929                           	callstack 0
   930   00003D                     seven_segment_write_number@ret:
   931                           	callstack 0
   932   00003D                     ??_led_init:
   933                           
   934                           ; 1 bytes @ 0xB
   935   00003D                     	ds	1
   936   00003E                     led_init@ret:
   937                           	callstack 0
   938   00003E                     ??_counter:
   939                           
   940                           ; 1 bytes @ 0xC
   941   00003E                     	ds	1
   942   00003F                     led_init@pin_obj:
   943                           	callstack 0
   944   00003F                     counter@i:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0xD
   948   00003F                     	ds	1
   949   000040                     counter@number:
   950                           	callstack 0
   951   000040                     
   952                           ; 1 bytes @ 0xE
   953   000040                     	ds	1
   954   000041                     
   955                           ; 1 bytes @ 0xF
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   958 ;;
   959 ;; *************** function _main *****************
   960 ;; Defined at:
   961 ;;		line 92 in file "app.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  2  202[None  ] int 
   968 ;; Registers used:
   969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels required when called: 4
   981 ;; This function calls:
   982 ;;		_counter
   983 ;;		_init
   984 ;;		_led_off
   985 ;;		_led_on
   986 ;; This function is called by:
   987 ;;		Startup code after reset
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text0
   992   0016E2                     __ptext0:
   993                           	callstack 0
   994   0016E2                     _main:
   995                           	callstack 27
   996   0016E2                     
   997                           ;app.c: 93:     init();
   998   0016E2  ECBE  F00B         	call	_init	;wreg free
   999   0016E6                     l203:
  1000                           
  1001                           ;app.c: 96:         ret = led_on(&red_led);
  1002   0016E6  0E31               	movlw	low _red_led
  1003   0016E8  6E39               	movwf	led_on@led^0,c
  1004   0016EA  EC8B  F00A         	call	_led_on	;wreg free
  1005   0016EE  6E46               	movwf	_ret^0,c
  1006                           
  1007                           ;app.c: 97:         counter();
  1008   0016F0  EC22  F009         	call	_counter	;wreg free
  1009                           
  1010                           ;app.c: 98:         ret = led_off(&red_led);
  1011   0016F4  0E31               	movlw	low _red_led
  1012   0016F6  6E39               	movwf	led_off@led^0,c
  1013   0016F8  ECC5  F00A         	call	_led_off	;wreg free
  1014   0016FC  6E46               	movwf	_ret^0,c
  1015                           
  1016                           ;app.c: 100:         ret = led_on(&yellow_led);
  1017   0016FE  0E30               	movlw	low _yellow_led
  1018   001700  6E39               	movwf	led_on@led^0,c
  1019   001702  EC8B  F00A         	call	_led_on	;wreg free
  1020   001706  6E46               	movwf	_ret^0,c
  1021                           
  1022                           ;app.c: 101:         counter();
  1023   001708  EC22  F009         	call	_counter	;wreg free
  1024                           
  1025                           ;app.c: 102:         ret = led_off(&yellow_led);
  1026   00170C  0E30               	movlw	low _yellow_led
  1027   00170E  6E39               	movwf	led_off@led^0,c
  1028   001710  ECC5  F00A         	call	_led_off	;wreg free
  1029   001714  6E46               	movwf	_ret^0,c
  1030                           
  1031                           ;app.c: 104:         ret = led_on(&green_led);
  1032   001716  0E2F               	movlw	low _green_led
  1033   001718  6E39               	movwf	led_on@led^0,c
  1034   00171A  EC8B  F00A         	call	_led_on	;wreg free
  1035   00171E  6E46               	movwf	_ret^0,c
  1036                           
  1037                           ;app.c: 105:         counter();
  1038   001720  EC22  F009         	call	_counter	;wreg free
  1039                           
  1040                           ;app.c: 106:         ret = led_off(&green_led);
  1041   001724  0E2F               	movlw	low _green_led
  1042   001726  6E39               	movwf	led_off@led^0,c
  1043   001728  ECC5  F00A         	call	_led_off	;wreg free
  1044   00172C  6E46               	movwf	_ret^0,c
  1045   00172E  EF73  F00B         	goto	l203
  1046   001732  EFFE  F07F         	goto	start
  1047   001736                     __end_of_main:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _led_on *****************
  1051 ;; Defined at:
  1052 ;;		line 26 in file "ECU/LED/ecu_led.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  led             1    7[COMRAM] PTR const struct .
  1055 ;;		 -> green_led(1), yellow_led(1), red_led(1), 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  pin_obj         1   10[COMRAM] struct .
  1058 ;;  ret             1    9[COMRAM] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      unsigned char 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1068 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;Total ram usage:        4 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 1
  1075 ;; This function calls:
  1076 ;;		_gbio_pin_write_logic
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text1
  1083   001516                     __ptext1:
  1084                           	callstack 0
  1085   001516                     _led_on:
  1086                           	callstack 29
  1087   001516                     
  1088                           ;ECU/LED/ecu_led.c: 28:     if (((void*)0) == led) {
  1089   001516  5039               	movf	led_on@led^0,w,c
  1090   001518  A4D8               	btfss	status,2,c
  1091   00151A  EF91  F00A         	goto	u941
  1092   00151E  EF93  F00A         	goto	u940
  1093   001522                     u941:
  1094   001522  EF96  F00A         	goto	l16
  1095   001526                     u940:
  1096   001526                     
  1097                           ;ECU/LED/ecu_led.c: 29:         ret = (Std_ReturnType)0x00;
  1098   001526  6A3B               	clrf	led_on@ret^0,c
  1099                           
  1100                           ;ECU/LED/ecu_led.c: 30:     } else {
  1101   001528  EFC3  F00A         	goto	l1501
  1102   00152C                     l16:
  1103                           
  1104                           ;ECU/LED/ecu_led.c: 31:         pin_config_t pin_obj = {
  1105   00152C  C043  F03C         	movff	led_on@F3017,led_on@pin_obj
  1106   001530  5039               	movf	led_on@led^0,w,c
  1107   001532  6ED9               	movwf	fsr2l,c
  1108   001534  6ADA               	clrf	fsr2h,c
  1109   001536  30DF               	rrcf	223,w,c
  1110   001538  32E8               	rrcf	wreg,f,c
  1111   00153A  32E8               	rrcf	wreg,f,c
  1112   00153C  0B07               	andlw	7
  1113   00153E  6E3A               	movwf	??_led_on^0,c
  1114   001540  503C               	movf	led_on@pin_obj^0,w,c
  1115   001542  183A               	xorwf	??_led_on^0,w,c
  1116   001544  0BF8               	andlw	-8
  1117   001546  183A               	xorwf	??_led_on^0,w,c
  1118   001548  6E3C               	movwf	led_on@pin_obj^0,c
  1119   00154A  5039               	movf	led_on@led^0,w,c
  1120   00154C  6ED9               	movwf	fsr2l,c
  1121   00154E  6ADA               	clrf	fsr2h,c
  1122   001550  50DF               	movf	223,w,c
  1123   001552  0B07               	andlw	7
  1124   001554  6E3A               	movwf	??_led_on^0,c
  1125   001556  463A               	rlncf	??_led_on^0,f,c
  1126   001558  463A               	rlncf	??_led_on^0,f,c
  1127   00155A  463A               	rlncf	??_led_on^0,f,c
  1128   00155C  503C               	movf	led_on@pin_obj^0,w,c
  1129   00155E  183A               	xorwf	??_led_on^0,w,c
  1130   001560  0BC7               	andlw	-57
  1131   001562  183A               	xorwf	??_led_on^0,w,c
  1132   001564  6E3C               	movwf	led_on@pin_obj^0,c
  1133   001566  5039               	movf	led_on@led^0,w,c
  1134   001568  6ED9               	movwf	fsr2l,c
  1135   00156A  6ADA               	clrf	fsr2h,c
  1136   00156C  ACDF               	btfss	indf2,6,c
  1137   00156E  D002               	bra	u955
  1138   001570  8C3C               	bsf	led_on@pin_obj^0,6,c
  1139   001572  D001               	bra	u957
  1140   001574                     u955:
  1141   001574  9C3C               	bcf	led_on@pin_obj^0,6,c
  1142   001576                     u957:
  1143   001576  9E3C               	bcf	led_on@pin_obj^0,7,c
  1144   001578                     
  1145                           ;ECU/LED/ecu_led.c: 37:         ret = gbio_pin_write_logic(&pin_obj, GPIO_HIGH);
  1146   001578  0E3C               	movlw	low led_on@pin_obj
  1147   00157A  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  1148   00157C  0E01               	movlw	1
  1149   00157E  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1150   001580  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1151   001584  6E3B               	movwf	led_on@ret^0,c
  1152   001586                     l1501:
  1153                           
  1154                           ;ECU/LED/ecu_led.c: 39:     return ret;
  1155   001586  503B               	movf	led_on@ret^0,w,c
  1156   001588  0012               	return		;funcret
  1157   00158A                     __end_of_led_on:
  1158                           	callstack 0
  1159                           
  1160 ;; *************** function _led_off *****************
  1161 ;; Defined at:
  1162 ;;		line 41 in file "ECU/LED/ecu_led.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  led             1    7[COMRAM] PTR const struct .
  1165 ;;		 -> green_led(1), yellow_led(1), red_led(1), 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  pin_obj         1   10[COMRAM] struct .
  1168 ;;  ret             1    9[COMRAM] unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      unsigned char 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1178 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;Total ram usage:        4 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 1
  1185 ;; This function calls:
  1186 ;;		_gbio_pin_write_logic
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text2
  1193   00158A                     __ptext2:
  1194                           	callstack 0
  1195   00158A                     _led_off:
  1196                           	callstack 29
  1197   00158A                     
  1198                           ;ECU/LED/ecu_led.c: 43:     if (((void*)0) == led) {
  1199   00158A  5039               	movf	led_off@led^0,w,c
  1200   00158C  A4D8               	btfss	status,2,c
  1201   00158E  EFCB  F00A         	goto	u961
  1202   001592  EFCD  F00A         	goto	u960
  1203   001596                     u961:
  1204   001596  EFD0  F00A         	goto	l23
  1205   00159A                     u960:
  1206   00159A                     
  1207                           ;ECU/LED/ecu_led.c: 44:         ret = (Std_ReturnType)0x00;
  1208   00159A  6A3B               	clrf	led_off@ret^0,c
  1209                           
  1210                           ;ECU/LED/ecu_led.c: 45:     } else {
  1211   00159C  EFFD  F00A         	goto	l1517
  1212   0015A0                     l23:
  1213                           
  1214                           ;ECU/LED/ecu_led.c: 46:         pin_config_t pin_obj = {
  1215   0015A0  C042  F03C         	movff	led_off@F3022,led_off@pin_obj
  1216   0015A4  5039               	movf	led_off@led^0,w,c
  1217   0015A6  6ED9               	movwf	fsr2l,c
  1218   0015A8  6ADA               	clrf	fsr2h,c
  1219   0015AA  30DF               	rrcf	223,w,c
  1220   0015AC  32E8               	rrcf	wreg,f,c
  1221   0015AE  32E8               	rrcf	wreg,f,c
  1222   0015B0  0B07               	andlw	7
  1223   0015B2  6E3A               	movwf	??_led_off^0,c
  1224   0015B4  503C               	movf	led_off@pin_obj^0,w,c
  1225   0015B6  183A               	xorwf	??_led_off^0,w,c
  1226   0015B8  0BF8               	andlw	-8
  1227   0015BA  183A               	xorwf	??_led_off^0,w,c
  1228   0015BC  6E3C               	movwf	led_off@pin_obj^0,c
  1229   0015BE  5039               	movf	led_off@led^0,w,c
  1230   0015C0  6ED9               	movwf	fsr2l,c
  1231   0015C2  6ADA               	clrf	fsr2h,c
  1232   0015C4  50DF               	movf	223,w,c
  1233   0015C6  0B07               	andlw	7
  1234   0015C8  6E3A               	movwf	??_led_off^0,c
  1235   0015CA  463A               	rlncf	??_led_off^0,f,c
  1236   0015CC  463A               	rlncf	??_led_off^0,f,c
  1237   0015CE  463A               	rlncf	??_led_off^0,f,c
  1238   0015D0  503C               	movf	led_off@pin_obj^0,w,c
  1239   0015D2  183A               	xorwf	??_led_off^0,w,c
  1240   0015D4  0BC7               	andlw	-57
  1241   0015D6  183A               	xorwf	??_led_off^0,w,c
  1242   0015D8  6E3C               	movwf	led_off@pin_obj^0,c
  1243   0015DA  5039               	movf	led_off@led^0,w,c
  1244   0015DC  6ED9               	movwf	fsr2l,c
  1245   0015DE  6ADA               	clrf	fsr2h,c
  1246   0015E0  ACDF               	btfss	indf2,6,c
  1247   0015E2  D002               	bra	u975
  1248   0015E4  8C3C               	bsf	led_off@pin_obj^0,6,c
  1249   0015E6  D001               	bra	u977
  1250   0015E8                     u975:
  1251   0015E8  9C3C               	bcf	led_off@pin_obj^0,6,c
  1252   0015EA                     u977:
  1253   0015EA  9E3C               	bcf	led_off@pin_obj^0,7,c
  1254   0015EC                     
  1255                           ;ECU/LED/ecu_led.c: 52:         ret = gbio_pin_write_logic(&pin_obj, GPIO_LOW);
  1256   0015EC  0E3C               	movlw	low led_off@pin_obj
  1257   0015EE  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  1258   0015F0  0E00               	movlw	0
  1259   0015F2  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1260   0015F4  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1261   0015F8  6E3B               	movwf	led_off@ret^0,c
  1262   0015FA                     l1517:
  1263                           
  1264                           ;ECU/LED/ecu_led.c: 54:     return ret;
  1265   0015FA  503B               	movf	led_off@ret^0,w,c
  1266   0015FC  0012               	return		;funcret
  1267   0015FE                     __end_of_led_off:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function _init *****************
  1271 ;; Defined at:
  1272 ;;		line 62 in file "app.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 3
  1293 ;; This function calls:
  1294 ;;		_gbio_pin_init
  1295 ;;		_led_init
  1296 ;;		_seven_segment_init
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text3
  1303   00177C                     __ptext3:
  1304                           	callstack 0
  1305   00177C                     _init:
  1306                           	callstack 27
  1307   00177C                     
  1308                           ;app.c: 63:     ret = seven_segment_init(&ssegment);
  1309   00177C  0E29               	movlw	low _ssegment
  1310   00177E  6E3C               	movwf	seven_segment_init@ssegment^0,c
  1311   001780  EC9B  F00B         	call	_seven_segment_init	;wreg free
  1312   001784  6E46               	movwf	_ret^0,c
  1313                           
  1314                           ;app.c: 64:     ret = gbio_pin_init(&enable_ssegment1);
  1315   001786  0E45               	movlw	low _enable_ssegment1
  1316   001788  6E39               	movwf	gbio_pin_init@pin_config^0,c
  1317   00178A  ECFF  F00A         	call	_gbio_pin_init	;wreg free
  1318   00178E  6E46               	movwf	_ret^0,c
  1319                           
  1320                           ;app.c: 65:     ret = gbio_pin_init(&enable_ssegment2);
  1321   001790  0E2E               	movlw	low _enable_ssegment2
  1322   001792  6E39               	movwf	gbio_pin_init@pin_config^0,c
  1323   001794  ECFF  F00A         	call	_gbio_pin_init	;wreg free
  1324   001798  6E46               	movwf	_ret^0,c
  1325                           
  1326                           ;app.c: 66:     ret = led_init(&red_led);
  1327   00179A  0E31               	movlw	low _red_led
  1328   00179C  6E3C               	movwf	led_init@led^0,c
  1329   00179E  EC39  F00B         	call	_led_init	;wreg free
  1330   0017A2  6E46               	movwf	_ret^0,c
  1331                           
  1332                           ;app.c: 67:     ret = led_init(&yellow_led);
  1333   0017A4  0E30               	movlw	low _yellow_led
  1334   0017A6  6E3C               	movwf	led_init@led^0,c
  1335   0017A8  EC39  F00B         	call	_led_init	;wreg free
  1336   0017AC  6E46               	movwf	_ret^0,c
  1337                           
  1338                           ;app.c: 68:     ret = led_init(&green_led);
  1339   0017AE  0E2F               	movlw	low _green_led
  1340   0017B0  6E3C               	movwf	led_init@led^0,c
  1341   0017B2  EC39  F00B         	call	_led_init	;wreg free
  1342   0017B6  6E46               	movwf	_ret^0,c
  1343   0017B8  0012               	return		;funcret
  1344   0017BA                     __end_of_init:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _seven_segment_init *****************
  1348 ;; Defined at:
  1349 ;;		line 8 in file "ECU/7SEG/seven_segment.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  ssegment        1   10[COMRAM] PTR const struct .
  1352 ;;		 -> ssegment(5), 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  ret             1   11[COMRAM] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      unsigned char 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:        2 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; Hardware stack levels required when called: 2
  1371 ;; This function calls:
  1372 ;;		_gbio_pin_init
  1373 ;; This function is called by:
  1374 ;;		_init
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text4
  1379   001736                     __ptext4:
  1380                           	callstack 0
  1381   001736                     _seven_segment_init:
  1382                           	callstack 27
  1383   001736                     
  1384                           ;ECU/7SEG/seven_segment.c: 10:     if (((void*)0) == ssegment) {
  1385   001736  503C               	movf	seven_segment_init@ssegment^0,w,c
  1386   001738  A4D8               	btfss	status,2,c
  1387   00173A  EFA1  F00B         	goto	u781
  1388   00173E  EFA3  F00B         	goto	u780
  1389   001742                     u781:
  1390   001742  EFA6  F00B         	goto	l1385
  1391   001746                     u780:
  1392   001746                     
  1393                           ;ECU/7SEG/seven_segment.c: 11:         ret = (Std_ReturnType)0x00;
  1394   001746  6A3D               	clrf	seven_segment_init@ret^0,c
  1395                           
  1396                           ;ECU/7SEG/seven_segment.c: 12:     } else {
  1397   001748  EFBC  F00B         	goto	l1387
  1398   00174C                     l1385:
  1399                           
  1400                           ;ECU/7SEG/seven_segment.c: 14:         ret = gbio_pin_init(&ssegment->pins[PIN0]);
  1401   00174C  C03C  F039         	movff	seven_segment_init@ssegment,gbio_pin_init@pin_config
  1402   001750  ECFF  F00A         	call	_gbio_pin_init	;wreg free
  1403   001754  6E3D               	movwf	seven_segment_init@ret^0,c
  1404                           
  1405                           ;ECU/7SEG/seven_segment.c: 15:         ret |= gbio_pin_init(&ssegment->pins[PIN1]);
  1406   001756  283C               	incf	seven_segment_init@ssegment^0,w,c
  1407   001758  6E39               	movwf	gbio_pin_init@pin_config^0,c
  1408   00175A  ECFF  F00A         	call	_gbio_pin_init	;wreg free
  1409   00175E  123D               	iorwf	seven_segment_init@ret^0,f,c
  1410                           
  1411                           ;ECU/7SEG/seven_segment.c: 16:         ret |= gbio_pin_init(&ssegment->pins[PIN2]);
  1412   001760  503C               	movf	seven_segment_init@ssegment^0,w,c
  1413   001762  0F02               	addlw	2
  1414   001764  6E39               	movwf	gbio_pin_init@pin_config^0,c
  1415   001766  ECFF  F00A         	call	_gbio_pin_init	;wreg free
  1416   00176A  123D               	iorwf	seven_segment_init@ret^0,f,c
  1417                           
  1418                           ;ECU/7SEG/seven_segment.c: 17:         ret |= gbio_pin_init(&ssegment->pins[PIN3]);
  1419   00176C  503C               	movf	seven_segment_init@ssegment^0,w,c
  1420   00176E  0F03               	addlw	3
  1421   001770  6E39               	movwf	gbio_pin_init@pin_config^0,c
  1422   001772  ECFF  F00A         	call	_gbio_pin_init	;wreg free
  1423   001776  123D               	iorwf	seven_segment_init@ret^0,f,c
  1424   001778                     l1387:
  1425                           
  1426                           ;ECU/7SEG/seven_segment.c: 20:     return ret;
  1427   001778  503D               	movf	seven_segment_init@ret^0,w,c
  1428   00177A  0012               	return		;funcret
  1429   00177C                     __end_of_seven_segment_init:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _led_init *****************
  1433 ;; Defined at:
  1434 ;;		line 10 in file "ECU/LED/ecu_led.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  led             1   10[COMRAM] PTR const struct .
  1437 ;;		 -> green_led(1), yellow_led(1), red_led(1), 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  pin_obj         1   13[COMRAM] struct .
  1440 ;;  ret             1   12[COMRAM] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      unsigned char 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1450 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;Total ram usage:        4 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 2
  1457 ;; This function calls:
  1458 ;;		_gbio_pin_init
  1459 ;; This function is called by:
  1460 ;;		_init
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text5
  1465   001672                     __ptext5:
  1466                           	callstack 0
  1467   001672                     _led_init:
  1468                           	callstack 27
  1469   001672                     
  1470                           ;ECU/LED/ecu_led.c: 12:     if (((void*)0) == led) {
  1471   001672  503C               	movf	led_init@led^0,w,c
  1472   001674  A4D8               	btfss	status,2,c
  1473   001676  EF3F  F00B         	goto	u761
  1474   00167A  EF41  F00B         	goto	u760
  1475   00167E                     u761:
  1476   00167E  EF44  F00B         	goto	l9
  1477   001682                     u760:
  1478   001682                     
  1479                           ;ECU/LED/ecu_led.c: 13:         ret = (Std_ReturnType)0x00;
  1480   001682  6A3E               	clrf	led_init@ret^0,c
  1481                           
  1482                           ;ECU/LED/ecu_led.c: 14:     } else {
  1483   001684  EF6F  F00B         	goto	l1377
  1484   001688                     l9:
  1485                           
  1486                           ;ECU/LED/ecu_led.c: 15:         pin_config_t pin_obj = {
  1487   001688  C044  F03F         	movff	led_init@F3012,led_init@pin_obj
  1488   00168C  503C               	movf	led_init@led^0,w,c
  1489   00168E  6ED9               	movwf	fsr2l,c
  1490   001690  6ADA               	clrf	fsr2h,c
  1491   001692  30DF               	rrcf	223,w,c
  1492   001694  32E8               	rrcf	wreg,f,c
  1493   001696  32E8               	rrcf	wreg,f,c
  1494   001698  0B07               	andlw	7
  1495   00169A  6E3D               	movwf	??_led_init^0,c
  1496   00169C  503F               	movf	led_init@pin_obj^0,w,c
  1497   00169E  183D               	xorwf	??_led_init^0,w,c
  1498   0016A0  0BF8               	andlw	-8
  1499   0016A2  183D               	xorwf	??_led_init^0,w,c
  1500   0016A4  6E3F               	movwf	led_init@pin_obj^0,c
  1501   0016A6  503C               	movf	led_init@led^0,w,c
  1502   0016A8  6ED9               	movwf	fsr2l,c
  1503   0016AA  6ADA               	clrf	fsr2h,c
  1504   0016AC  50DF               	movf	223,w,c
  1505   0016AE  0B07               	andlw	7
  1506   0016B0  6E3D               	movwf	??_led_init^0,c
  1507   0016B2  463D               	rlncf	??_led_init^0,f,c
  1508   0016B4  463D               	rlncf	??_led_init^0,f,c
  1509   0016B6  463D               	rlncf	??_led_init^0,f,c
  1510   0016B8  503F               	movf	led_init@pin_obj^0,w,c
  1511   0016BA  183D               	xorwf	??_led_init^0,w,c
  1512   0016BC  0BC7               	andlw	-57
  1513   0016BE  183D               	xorwf	??_led_init^0,w,c
  1514   0016C0  6E3F               	movwf	led_init@pin_obj^0,c
  1515   0016C2  503C               	movf	led_init@led^0,w,c
  1516   0016C4  6ED9               	movwf	fsr2l,c
  1517   0016C6  6ADA               	clrf	fsr2h,c
  1518   0016C8  ACDF               	btfss	indf2,6,c
  1519   0016CA  D002               	bra	u775
  1520   0016CC  8C3F               	bsf	led_init@pin_obj^0,6,c
  1521   0016CE  D001               	bra	u777
  1522   0016D0                     u775:
  1523   0016D0  9C3F               	bcf	led_init@pin_obj^0,6,c
  1524   0016D2                     u777:
  1525   0016D2  9E3F               	bcf	led_init@pin_obj^0,7,c
  1526   0016D4                     
  1527                           ;ECU/LED/ecu_led.c: 21:         ret = gbio_pin_init(&pin_obj);
  1528   0016D4  0E3F               	movlw	low led_init@pin_obj
  1529   0016D6  6E39               	movwf	gbio_pin_init@pin_config^0,c
  1530   0016D8  ECFF  F00A         	call	_gbio_pin_init	;wreg free
  1531   0016DC  6E3E               	movwf	led_init@ret^0,c
  1532   0016DE                     l1377:
  1533                           
  1534                           ;ECU/LED/ecu_led.c: 23:     return ret;
  1535   0016DE  503E               	movf	led_init@ret^0,w,c
  1536   0016E0  0012               	return		;funcret
  1537   0016E2                     __end_of_led_init:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _gbio_pin_init *****************
  1541 ;; Defined at:
  1542 ;;		line 15 in file "MCAL/GPIO/hal_gbio.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  pin_config      1    7[COMRAM] PTR const struct .
  1545 ;;		 -> enable_ssegment2(1), enable_ssegment1(1), ssegment$pins(4), ssegment(5), 
  1546 ;;		 -> led_init@pin_obj(1), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  ret             1    9[COMRAM] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      unsigned char 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:        3 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 1
  1565 ;; This function calls:
  1566 ;;		_gbio_pin_direction_init
  1567 ;;		_gbio_pin_write_logic
  1568 ;; This function is called by:
  1569 ;;		_led_init
  1570 ;;		_init
  1571 ;;		_seven_segment_init
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text6
  1576   0015FE                     __ptext6:
  1577                           	callstack 0
  1578   0015FE                     _gbio_pin_init:
  1579                           	callstack 27
  1580   0015FE                     
  1581                           ;MCAL/GPIO/hal_gbio.c: 17:     if ((pin_config == ((void*)0)) || (pin_config->pin > (8 -
      +                           1)) || (pin_config->pin > (5 - 1))) {
  1582   0015FE  5039               	movf	gbio_pin_init@pin_config^0,w,c
  1583   001600  B4D8               	btfsc	status,2,c
  1584   001602  EF05  F00B         	goto	u731
  1585   001606  EF07  F00B         	goto	u730
  1586   00160A                     u731:
  1587   00160A  EF23  F00B         	goto	l1353
  1588   00160E                     u730:
  1589   00160E  5039               	movf	gbio_pin_init@pin_config^0,w,c
  1590   001610  6ED9               	movwf	fsr2l,c
  1591   001612  6ADA               	clrf	fsr2h,c
  1592   001614  50DF               	movf	223,w,c
  1593   001616  0B07               	andlw	7
  1594   001618  6E3A               	movwf	??_gbio_pin_init^0,c
  1595   00161A  0E08               	movlw	8
  1596   00161C  603A               	cpfslt	??_gbio_pin_init^0,c
  1597   00161E  EF13  F00B         	goto	u741
  1598   001622  EF15  F00B         	goto	u740
  1599   001626                     u741:
  1600   001626  EF23  F00B         	goto	l1353
  1601   00162A                     u740:
  1602   00162A  5039               	movf	gbio_pin_init@pin_config^0,w,c
  1603   00162C  6ED9               	movwf	fsr2l,c
  1604   00162E  6ADA               	clrf	fsr2h,c
  1605   001630  50DF               	movf	223,w,c
  1606   001632  0B07               	andlw	7
  1607   001634  6E3A               	movwf	??_gbio_pin_init^0,c
  1608   001636  0E04               	movlw	4
  1609   001638  643A               	cpfsgt	??_gbio_pin_init^0,c
  1610   00163A  EF21  F00B         	goto	u751
  1611   00163E  EF23  F00B         	goto	u750
  1612   001642                     u751:
  1613   001642  EF26  F00B         	goto	l1359
  1614   001646                     u750:
  1615   001646                     l1353:
  1616                           
  1617                           ;MCAL/GPIO/hal_gbio.c: 18:         return ret;
  1618   001646  0E00               	movlw	0
  1619   001648  EF38  F00B         	goto	l80
  1620   00164C                     l1359:
  1621                           
  1622                           ;MCAL/GPIO/hal_gbio.c: 20:         ret = gbio_pin_direction_init(pin_config);
  1623   00164C  C039  F032         	movff	gbio_pin_init@pin_config,gbio_pin_direction_init@pin_config
  1624   001650  EC01  F008         	call	_gbio_pin_direction_init	;wreg free
  1625   001654  6E3B               	movwf	gbio_pin_init@ret^0,c
  1626                           
  1627                           ;MCAL/GPIO/hal_gbio.c: 21:         ret |= gbio_pin_write_logic(pin_config, pin_config->l
      +                          ogic);
  1628   001656  C039  F032         	movff	gbio_pin_init@pin_config,gbio_pin_write_logic@pin_config
  1629   00165A  5039               	movf	gbio_pin_init@pin_config^0,w,c
  1630   00165C  6ED9               	movwf	fsr2l,c
  1631   00165E  6ADA               	clrf	fsr2h,c
  1632   001660  0E00               	movlw	0
  1633   001662  BCDF               	btfsc	indf2,6,c
  1634   001664  0E01               	movlw	1
  1635   001666  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1636   001668  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1637   00166C  123B               	iorwf	gbio_pin_init@ret^0,f,c
  1638   00166E                     
  1639                           ;MCAL/GPIO/hal_gbio.c: 23:     return ret;
  1640   00166E  503B               	movf	gbio_pin_init@ret^0,w,c
  1641   001670                     l80:
  1642   001670  0012               	return		;funcret
  1643   001672                     __end_of_gbio_pin_init:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _gbio_pin_direction_init *****************
  1647 ;; Defined at:
  1648 ;;		line 29 in file "MCAL/GPIO/hal_gbio.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  pin_config      1    0[COMRAM] PTR const struct .
  1651 ;;		 -> enable_ssegment2(1), enable_ssegment1(1), ssegment$pins(4), ssegment(5), 
  1652 ;;		 -> led_init@pin_obj(1), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  ret             1    0        unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      unsigned char 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1664 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;Total ram usage:        6 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_gbio_pin_init
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text7
  1678   001002                     __ptext7:
  1679                           	callstack 0
  1680   001002                     _gbio_pin_direction_init:
  1681                           	callstack 27
  1682   001002                     
  1683                           ;MCAL/GPIO/hal_gbio.c: 31:     if ((pin_config == ((void*)0)) || (pin_config->pin > (8 -
      +                           1)) || (pin_config->port > (5 - 1))) {
  1684   001002  5032               	movf	gbio_pin_direction_init@pin_config^0,w,c
  1685   001004  B4D8               	btfsc	status,2,c
  1686   001006  EF07  F008         	goto	u671
  1687   00100A  EF09  F008         	goto	u670
  1688   00100E                     u671:
  1689   00100E  EF27  F008         	goto	l1329
  1690   001012                     u670:
  1691   001012  5032               	movf	gbio_pin_direction_init@pin_config^0,w,c
  1692   001014  6ED9               	movwf	fsr2l,c
  1693   001016  6ADA               	clrf	fsr2h,c
  1694   001018  50DF               	movf	223,w,c
  1695   00101A  0B07               	andlw	7
  1696   00101C  6E33               	movwf	??_gbio_pin_direction_init^0,c
  1697   00101E  0E08               	movlw	8
  1698   001020  6033               	cpfslt	??_gbio_pin_direction_init^0,c
  1699   001022  EF15  F008         	goto	u681
  1700   001026  EF17  F008         	goto	u680
  1701   00102A                     u681:
  1702   00102A  EF27  F008         	goto	l1329
  1703   00102E                     u680:
  1704   00102E  5032               	movf	gbio_pin_direction_init@pin_config^0,w,c
  1705   001030  6ED9               	movwf	fsr2l,c
  1706   001032  6ADA               	clrf	fsr2h,c
  1707   001034  30DF               	rrcf	223,w,c
  1708   001036  32E8               	rrcf	wreg,f,c
  1709   001038  32E8               	rrcf	wreg,f,c
  1710   00103A  0B07               	andlw	7
  1711   00103C  6E33               	movwf	??_gbio_pin_direction_init^0,c
  1712   00103E  0E04               	movlw	4
  1713   001040  6433               	cpfsgt	??_gbio_pin_direction_init^0,c
  1714   001042  EF25  F008         	goto	u691
  1715   001046  EF27  F008         	goto	u690
  1716   00104A                     u691:
  1717   00104A  EF7F  F008         	goto	l1339
  1718   00104E                     u690:
  1719   00104E                     l1329:
  1720                           
  1721                           ;MCAL/GPIO/hal_gbio.c: 32:         return ret;
  1722   00104E  0E00               	movlw	0
  1723   001050  EF96  F008         	goto	l87
  1724   001054                     l1335:
  1725                           
  1726                           ;MCAL/GPIO/hal_gbio.c: 36:                 (*tris_registers[pin_config->port] &= ~((uint
      +                          8)1 << pin_config->pin));
  1727   001054  5032               	movf	gbio_pin_direction_init@pin_config^0,w,c
  1728   001056  6ED9               	movwf	fsr2l,c
  1729   001058  6ADA               	clrf	fsr2h,c
  1730   00105A  50DF               	movf	223,w,c
  1731   00105C  0B07               	andlw	7
  1732   00105E  6E33               	movwf	??_gbio_pin_direction_init^0,c
  1733   001060  0E01               	movlw	1
  1734   001062  6E34               	movwf	(??_gbio_pin_direction_init+1)^0,c
  1735   001064  2A33               	incf	??_gbio_pin_direction_init^0,f,c
  1736   001066  EF37  F008         	goto	u704
  1737   00106A                     u705:
  1738   00106A  90D8               	bcf	status,0,c
  1739   00106C  3634               	rlcf	(??_gbio_pin_direction_init+1)^0,f,c
  1740   00106E                     u704:
  1741   00106E  2E33               	decfsz	??_gbio_pin_direction_init^0,f,c
  1742   001070  EF35  F008         	goto	u705
  1743   001074  5034               	movf	(??_gbio_pin_direction_init+1)^0,w,c
  1744   001076  0AFF               	xorlw	255
  1745   001078  6E35               	movwf	(??_gbio_pin_direction_init+2)^0,c
  1746   00107A  5032               	movf	gbio_pin_direction_init@pin_config^0,w,c
  1747   00107C  6ED9               	movwf	fsr2l,c
  1748   00107E  6ADA               	clrf	fsr2h,c
  1749   001080  30DF               	rrcf	223,w,c
  1750   001082  32E8               	rrcf	wreg,f,c
  1751   001084  32E8               	rrcf	wreg,f,c
  1752   001086  0B07               	andlw	7
  1753   001088  0D02               	mullw	2
  1754   00108A  50F3               	movf	243,w,c
  1755   00108C  0F15               	addlw	low _tris_registers
  1756   00108E  6ED9               	movwf	fsr2l,c
  1757   001090  6ADA               	clrf	fsr2h,c
  1758   001092  CFDE F036          	movff	postinc2,??_gbio_pin_direction_init+3
  1759   001096  CFDD F037          	movff	postdec2,??_gbio_pin_direction_init+4
  1760   00109A  C036  FFD9         	movff	??_gbio_pin_direction_init+3,fsr2l
  1761   00109E  C037  FFDA         	movff	??_gbio_pin_direction_init+4,fsr2h
  1762   0010A2  5035               	movf	(??_gbio_pin_direction_init+2)^0,w,c
  1763   0010A4  16DF               	andwf	indf2,f,c
  1764                           
  1765                           ;MCAL/GPIO/hal_gbio.c: 37:                 break;
  1766   0010A6  EF95  F008         	goto	l1341
  1767   0010AA                     l1337:
  1768                           
  1769                           ;MCAL/GPIO/hal_gbio.c: 39:                 (*tris_registers[pin_config->port] |= ((uint8
      +                          )1 << pin_config->pin));
  1770   0010AA  5032               	movf	gbio_pin_direction_init@pin_config^0,w,c
  1771   0010AC  6ED9               	movwf	fsr2l,c
  1772   0010AE  6ADA               	clrf	fsr2h,c
  1773   0010B0  50DF               	movf	223,w,c
  1774   0010B2  0B07               	andlw	7
  1775   0010B4  6E33               	movwf	??_gbio_pin_direction_init^0,c
  1776   0010B6  0E01               	movlw	1
  1777   0010B8  6E34               	movwf	(??_gbio_pin_direction_init+1)^0,c
  1778   0010BA  2A33               	incf	??_gbio_pin_direction_init^0,f,c
  1779   0010BC  EF62  F008         	goto	u714
  1780   0010C0                     u715:
  1781   0010C0  90D8               	bcf	status,0,c
  1782   0010C2  3634               	rlcf	(??_gbio_pin_direction_init+1)^0,f,c
  1783   0010C4                     u714:
  1784   0010C4  2E33               	decfsz	??_gbio_pin_direction_init^0,f,c
  1785   0010C6  EF60  F008         	goto	u715
  1786   0010CA  5032               	movf	gbio_pin_direction_init@pin_config^0,w,c
  1787   0010CC  6ED9               	movwf	fsr2l,c
  1788   0010CE  6ADA               	clrf	fsr2h,c
  1789   0010D0  30DF               	rrcf	223,w,c
  1790   0010D2  32E8               	rrcf	wreg,f,c
  1791   0010D4  32E8               	rrcf	wreg,f,c
  1792   0010D6  0B07               	andlw	7
  1793   0010D8  0D02               	mullw	2
  1794   0010DA  50F3               	movf	243,w,c
  1795   0010DC  0F15               	addlw	low _tris_registers
  1796   0010DE  6ED9               	movwf	fsr2l,c
  1797   0010E0  6ADA               	clrf	fsr2h,c
  1798   0010E2  CFDE F035          	movff	postinc2,??_gbio_pin_direction_init+2
  1799   0010E6  CFDD F036          	movff	postdec2,??_gbio_pin_direction_init+3
  1800   0010EA  C035  FFD9         	movff	??_gbio_pin_direction_init+2,fsr2l
  1801   0010EE  C036  FFDA         	movff	??_gbio_pin_direction_init+3,fsr2h
  1802   0010F2  5034               	movf	(??_gbio_pin_direction_init+1)^0,w,c
  1803   0010F4  12DF               	iorwf	indf2,f,c
  1804                           
  1805                           ;MCAL/GPIO/hal_gbio.c: 40:                 break;
  1806   0010F6  EF95  F008         	goto	l1341
  1807   0010FA                     l93:
  1808                           
  1809                           ;MCAL/GPIO/hal_gbio.c: 42:         }
  1810   0010FA  EF95  F008         	goto	l1341
  1811   0010FE                     l1339:
  1812   0010FE  5032               	movf	gbio_pin_direction_init@pin_config^0,w,c
  1813   001100  6ED9               	movwf	fsr2l,c
  1814   001102  6ADA               	clrf	fsr2h,c
  1815   001104  BEDF               	btfsc	indf2,7,c
  1816   001106  EF87  F008         	goto	u721
  1817   00110A  EF8A  F008         	goto	u720
  1818   00110E                     u721:
  1819   00110E  0E01               	movlw	1
  1820   001110  EF8B  F008         	goto	u726
  1821   001114                     u720:
  1822   001114  0E00               	movlw	0
  1823   001116                     u726:
  1824                           
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 2, Range of values is 0 to 1
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            7     4 (average)
  1830                           ;	Chosen strategy is simple_byte
  1831   001116  0A00               	xorlw	0	; case 0
  1832   001118  B4D8               	btfsc	status,2,c
  1833   00111A  EF2A  F008         	goto	l1335
  1834   00111E  0A01               	xorlw	1	; case 1
  1835   001120  B4D8               	btfsc	status,2,c
  1836   001122  EF55  F008         	goto	l1337
  1837   001126  EF7D  F008         	goto	l93
  1838   00112A                     l1341:
  1839   00112A                     
  1840                           ;MCAL/GPIO/hal_gbio.c: 45:     return ret;
  1841   00112A  0E01               	movlw	1
  1842   00112C                     l87:
  1843   00112C  0012               	return		;funcret
  1844   00112E                     __end_of_gbio_pin_direction_init:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _counter *****************
  1848 ;; Defined at:
  1849 ;;		line 71 in file "app.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  i               1   13[COMRAM] unsigned char 
  1854 ;;  number          1   14[COMRAM] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;Total ram usage:        3 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 2
  1871 ;; This function calls:
  1872 ;;		___awdiv
  1873 ;;		___awmod
  1874 ;;		_gbio_pin_write_logic
  1875 ;;		_seven_segment_write_number
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text8
  1882   001244                     __ptext8:
  1883                           	callstack 0
  1884   001244                     _counter:
  1885                           	callstack 28
  1886   001244                     
  1887                           ;app.c: 72:     uint8 number = 60;
  1888   001244  0E3C               	movlw	60
  1889   001246  6E40               	movwf	counter@number^0,c
  1890                           
  1891                           ;app.c: 73:     while (number > 0) {
  1892   001248  EF82  F009         	goto	l1547
  1893   00124C                     l1525:
  1894                           
  1895                           ;app.c: 74:         for (uint8 i = 100; i > 0; --i) {
  1896   00124C  0E64               	movlw	100
  1897   00124E  6E3F               	movwf	counter@i^0,c
  1898   001250                     l1529:
  1899                           
  1900                           ;app.c: 75:             gbio_pin_write_logic(&enable_ssegment1, GPIO_LOW);
  1901   001250  0E45               	movlw	low _enable_ssegment1
  1902   001252  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  1903   001254  0E00               	movlw	0
  1904   001256  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1905   001258  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1906                           
  1907                           ;app.c: 76:             gbio_pin_write_logic(&enable_ssegment2, GPIO_LOW);
  1908   00125C  0E2E               	movlw	low _enable_ssegment2
  1909   00125E  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  1910   001260  0E00               	movlw	0
  1911   001262  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1912   001264  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1913                           
  1914                           ;app.c: 78:             seven_segment_write_number(&ssegment, ((uint8) (number / 10)));
  1915   001268  0E29               	movlw	low _ssegment
  1916   00126A  6E3A               	movwf	seven_segment_write_number@ssegment^0,c
  1917   00126C  C040  F032         	movff	counter@number,___awdiv@dividend
  1918   001270  6A33               	clrf	(___awdiv@dividend+1)^0,c
  1919   001272  0E00               	movlw	0
  1920   001274  6E35               	movwf	(___awdiv@divisor+1)^0,c
  1921   001276  0E0A               	movlw	10
  1922   001278  6E34               	movwf	___awdiv@divisor^0,c
  1923   00127A  EC8B  F009         	call	___awdiv	;wreg free
  1924   00127E  5032               	movf	?___awdiv^0,w,c
  1925   001280  6E3B               	movwf	seven_segment_write_number@number^0,c
  1926   001282  EC43  F00A         	call	_seven_segment_write_number	;wreg free
  1927                           
  1928                           ;app.c: 79:             gbio_pin_write_logic(&enable_ssegment1, GPIO_HIGH);
  1929   001286  0E45               	movlw	low _enable_ssegment1
  1930   001288  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  1931   00128A  0E01               	movlw	1
  1932   00128C  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1933   00128E  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1934   001292                     
  1935                           ;app.c: 80:             _delay((unsigned long)((5)*(8000000/4000.0)));
  1936   001292  0E0D               	movlw	13
  1937   001294  6E3E               	movwf	??_counter^0,c
  1938   001296  0EFC               	movlw	252
  1939   001298                     u1007:
  1940   001298  2EE8               	decfsz	wreg,f,c
  1941   00129A  D7FE               	bra	u1007
  1942   00129C  2E3E               	decfsz	??_counter^0,f,c
  1943   00129E  D7FC               	bra	u1007
  1944   0012A0                     
  1945                           ;app.c: 81:             gbio_pin_write_logic(&enable_ssegment1, GPIO_LOW);
  1946   0012A0  0E45               	movlw	low _enable_ssegment1
  1947   0012A2  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  1948   0012A4  0E00               	movlw	0
  1949   0012A6  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1950   0012A8  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1951   0012AC                     
  1952                           ;app.c: 83:             seven_segment_write_number(&ssegment, ((uint8) (number % 10)));
  1953   0012AC  0E29               	movlw	low _ssegment
  1954   0012AE  6E3A               	movwf	seven_segment_write_number@ssegment^0,c
  1955   0012B0  C040  F032         	movff	counter@number,___awmod@dividend
  1956   0012B4  6A33               	clrf	(___awmod@dividend+1)^0,c
  1957   0012B6  0E00               	movlw	0
  1958   0012B8  6E35               	movwf	(___awmod@divisor+1)^0,c
  1959   0012BA  0E0A               	movlw	10
  1960   0012BC  6E34               	movwf	___awmod@divisor^0,c
  1961   0012BE  ECEC  F009         	call	___awmod	;wreg free
  1962   0012C2  5032               	movf	?___awmod^0,w,c
  1963   0012C4  6E3B               	movwf	seven_segment_write_number@number^0,c
  1964   0012C6  EC43  F00A         	call	_seven_segment_write_number	;wreg free
  1965   0012CA                     
  1966                           ;app.c: 84:             gbio_pin_write_logic(&enable_ssegment2, GPIO_HIGH);
  1967   0012CA  0E2E               	movlw	low _enable_ssegment2
  1968   0012CC  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  1969   0012CE  0E01               	movlw	1
  1970   0012D0  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1971   0012D2  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1972                           
  1973                           ;app.c: 85:             _delay((unsigned long)((5)*(8000000/4000.0)));
  1974   0012D6  0E0D               	movlw	13
  1975   0012D8  6E3E               	movwf	??_counter^0,c
  1976   0012DA  0EFC               	movlw	252
  1977   0012DC                     u1017:
  1978   0012DC  2EE8               	decfsz	wreg,f,c
  1979   0012DE  D7FE               	bra	u1017
  1980   0012E0  2E3E               	decfsz	??_counter^0,f,c
  1981   0012E2  D7FC               	bra	u1017
  1982   0012E4                     
  1983                           ;app.c: 86:             gbio_pin_write_logic(&enable_ssegment2, GPIO_LOW);
  1984   0012E4  0E2E               	movlw	low _enable_ssegment2
  1985   0012E6  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  1986   0012E8  0E00               	movlw	0
  1987   0012EA  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  1988   0012EC  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  1989   0012F0                     
  1990                           ;app.c: 87:         }
  1991   0012F0  063F               	decf	counter@i^0,f,c
  1992   0012F2  503F               	movf	counter@i^0,w,c
  1993   0012F4  A4D8               	btfss	status,2,c
  1994   0012F6  EF7F  F009         	goto	u981
  1995   0012FA  EF81  F009         	goto	u980
  1996   0012FE                     u981:
  1997   0012FE  EF28  F009         	goto	l1529
  1998   001302                     u980:
  1999   001302                     
  2000                           ;app.c: 88:         --number;
  2001   001302  0640               	decf	counter@number^0,f,c
  2002   001304                     l1547:
  2003                           
  2004                           ;app.c: 73:     while (number > 0) {
  2005   001304  5040               	movf	counter@number^0,w,c
  2006   001306  A4D8               	btfss	status,2,c
  2007   001308  EF88  F009         	goto	u991
  2008   00130C  EF8A  F009         	goto	u990
  2009   001310                     u991:
  2010   001310  EF26  F009         	goto	l1525
  2011   001314                     u990:
  2012   001314  0012               	return		;funcret
  2013   001316                     __end_of_counter:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function _seven_segment_write_number *****************
  2017 ;; Defined at:
  2018 ;;		line 23 in file "ECU/7SEG/seven_segment.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  ssegment        1    8[COMRAM] PTR const struct .
  2021 ;;		 -> ssegment(5), 
  2022 ;;  number          1    9[COMRAM] unsigned char 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  ret             1   11[COMRAM] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      unsigned char 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;Total ram usage:        4 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; Hardware stack levels required when called: 1
  2041 ;; This function calls:
  2042 ;;		_gbio_pin_write_logic
  2043 ;; This function is called by:
  2044 ;;		_counter
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text9
  2049   001486                     __ptext9:
  2050                           	callstack 0
  2051   001486                     _seven_segment_write_number:
  2052                           	callstack 28
  2053   001486                     
  2054                           ;ECU/7SEG/seven_segment.c: 25:     if (((void*)0) == ssegment || number > 9) {
  2055   001486  503A               	movf	seven_segment_write_number@ssegment^0,w,c
  2056   001488  B4D8               	btfsc	status,2,c
  2057   00148A  EF49  F00A         	goto	u791
  2058   00148E  EF4B  F00A         	goto	u790
  2059   001492                     u791:
  2060   001492  EF53  F00A         	goto	l222
  2061   001496                     u790:
  2062   001496  0E09               	movlw	9
  2063   001498  643B               	cpfsgt	seven_segment_write_number@number^0,c
  2064   00149A  EF51  F00A         	goto	u801
  2065   00149E  EF53  F00A         	goto	u800
  2066   0014A2                     u801:
  2067   0014A2  EF55  F00A         	goto	l1395
  2068   0014A6                     u800:
  2069   0014A6                     l222:
  2070                           
  2071                           ;ECU/7SEG/seven_segment.c: 27:     } else {
  2072   0014A6  EF8A  F00A         	goto	l225
  2073   0014AA                     l1395:
  2074                           
  2075                           ;ECU/7SEG/seven_segment.c: 28:         if (COMMON_CATHODE == ssegment->seven_segment_typ
      +                          e) {
  2076   0014AA  503A               	movf	seven_segment_write_number@ssegment^0,w,c
  2077   0014AC  6ED9               	movwf	fsr2l,c
  2078   0014AE  6ADA               	clrf	fsr2h,c
  2079   0014B0  0E04               	movlw	4
  2080   0014B2  26D9               	addwf	fsr2l,f,c
  2081   0014B4  04DE               	decf	postinc2,w,c
  2082   0014B6  A4D8               	btfss	status,2,c
  2083   0014B8  EF60  F00A         	goto	u811
  2084   0014BC  EF62  F00A         	goto	u810
  2085   0014C0                     u811:
  2086   0014C0  EF63  F00A         	goto	l1399
  2087   0014C4                     u810:
  2088   0014C4                     
  2089                           ;ECU/7SEG/seven_segment.c: 29:             number = ~(number);
  2090   0014C4  1E3B               	comf	seven_segment_write_number@number^0,f,c
  2091   0014C6                     l1399:
  2092                           
  2093                           ;ECU/7SEG/seven_segment.c: 31:         ret = gbio_pin_write_logic(&ssegment->pins[PIN0],
      +                           ((number >> PIN0) & 0x01));
  2094   0014C6  C03A  F032         	movff	seven_segment_write_number@ssegment,gbio_pin_write_logic@pin_config
  2095   0014CA  503B               	movf	seven_segment_write_number@number^0,w,c
  2096   0014CC  0B01               	andlw	1
  2097   0014CE  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  2098   0014D0  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  2099   0014D4  6E3D               	movwf	seven_segment_write_number@ret^0,c
  2100   0014D6                     
  2101                           ;ECU/7SEG/seven_segment.c: 32:         ret |= gbio_pin_write_logic(&ssegment->pins[PIN1]
      +                          , ((number >> PIN1) & 0x01));
  2102   0014D6  283A               	incf	seven_segment_write_number@ssegment^0,w,c
  2103   0014D8  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  2104   0014DA  90D8               	bcf	status,0,c
  2105   0014DC  303B               	rrcf	seven_segment_write_number@number^0,w,c
  2106   0014DE  0B01               	andlw	1
  2107   0014E0  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  2108   0014E2  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  2109   0014E6  123D               	iorwf	seven_segment_write_number@ret^0,f,c
  2110   0014E8                     
  2111                           ;ECU/7SEG/seven_segment.c: 33:         ret |= gbio_pin_write_logic(&ssegment->pins[PIN2]
      +                          , ((number >> PIN2) & 0x01));
  2112   0014E8  503A               	movf	seven_segment_write_number@ssegment^0,w,c
  2113   0014EA  0F02               	addlw	2
  2114   0014EC  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  2115   0014EE  403B               	rrncf	seven_segment_write_number@number^0,w,c
  2116   0014F0  42E8               	rrncf	wreg,f,c
  2117   0014F2  0B3F               	andlw	63
  2118   0014F4  0B01               	andlw	1
  2119   0014F6  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  2120   0014F8  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  2121   0014FC  123D               	iorwf	seven_segment_write_number@ret^0,f,c
  2122   0014FE                     
  2123                           ;ECU/7SEG/seven_segment.c: 34:         ret |= gbio_pin_write_logic(&ssegment->pins[PIN3]
      +                          , ((number >> PIN3) & 0x01));
  2124   0014FE  503A               	movf	seven_segment_write_number@ssegment^0,w,c
  2125   001500  0F03               	addlw	3
  2126   001502  6E32               	movwf	gbio_pin_write_logic@pin_config^0,c
  2127   001504  383B               	swapf	seven_segment_write_number@number^0,w,c
  2128   001506  46E8               	rlncf	wreg,f,c
  2129   001508  0B1F               	andlw	31
  2130   00150A  0B01               	andlw	1
  2131   00150C  6E33               	movwf	gbio_pin_write_logic@logic^0,c
  2132   00150E  EC97  F008         	call	_gbio_pin_write_logic	;wreg free
  2133   001512  123D               	iorwf	seven_segment_write_number@ret^0,f,c
  2134   001514                     l225:
  2135   001514  0012               	return		;funcret
  2136   001516                     __end_of_seven_segment_write_number:
  2137                           	callstack 0
  2138                           
  2139 ;; *************** function _gbio_pin_write_logic *****************
  2140 ;; Defined at:
  2141 ;;		line 65 in file "MCAL/GPIO/hal_gbio.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  pin_config      1    0[COMRAM] PTR const struct .
  2144 ;;		 -> enable_ssegment2(1), enable_ssegment1(1), ssegment$pins(4), ssegment(5), 
  2145 ;;		 -> led_off@pin_obj(1), led_on@pin_obj(1), led_init@pin_obj(1), 
  2146 ;;  logic           1    1[COMRAM] unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  ret             1    0        unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      unsigned char 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;Total ram usage:        7 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_led_on
  2168 ;;		_led_off
  2169 ;;		_gbio_pin_init
  2170 ;;		_counter
  2171 ;;		_seven_segment_write_number
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text10
  2176   00112E                     __ptext10:
  2177                           	callstack 0
  2178   00112E                     _gbio_pin_write_logic:
  2179                           	callstack 29
  2180   00112E                     
  2181                           ;MCAL/GPIO/hal_gbio.c: 67:     if ((pin_config == ((void*)0)) || (pin_config->pin > (8 -
      +                           1)) || (pin_config->port > (5 - 1))) {
  2182   00112E  5032               	movf	gbio_pin_write_logic@pin_config^0,w,c
  2183   001130  B4D8               	btfsc	status,2,c
  2184   001132  EF9D  F008         	goto	u621
  2185   001136  EF9F  F008         	goto	u620
  2186   00113A                     u621:
  2187   00113A  EFBD  F008         	goto	l1305
  2188   00113E                     u620:
  2189   00113E  5032               	movf	gbio_pin_write_logic@pin_config^0,w,c
  2190   001140  6ED9               	movwf	fsr2l,c
  2191   001142  6ADA               	clrf	fsr2h,c
  2192   001144  50DF               	movf	223,w,c
  2193   001146  0B07               	andlw	7
  2194   001148  6E34               	movwf	??_gbio_pin_write_logic^0,c
  2195   00114A  0E08               	movlw	8
  2196   00114C  6034               	cpfslt	??_gbio_pin_write_logic^0,c
  2197   00114E  EFAB  F008         	goto	u631
  2198   001152  EFAD  F008         	goto	u630
  2199   001156                     u631:
  2200   001156  EFBD  F008         	goto	l1305
  2201   00115A                     u630:
  2202   00115A  5032               	movf	gbio_pin_write_logic@pin_config^0,w,c
  2203   00115C  6ED9               	movwf	fsr2l,c
  2204   00115E  6ADA               	clrf	fsr2h,c
  2205   001160  30DF               	rrcf	223,w,c
  2206   001162  32E8               	rrcf	wreg,f,c
  2207   001164  32E8               	rrcf	wreg,f,c
  2208   001166  0B07               	andlw	7
  2209   001168  6E34               	movwf	??_gbio_pin_write_logic^0,c
  2210   00116A  0E04               	movlw	4
  2211   00116C  6434               	cpfsgt	??_gbio_pin_write_logic^0,c
  2212   00116E  EFBB  F008         	goto	u641
  2213   001172  EFBD  F008         	goto	u640
  2214   001176                     u641:
  2215   001176  EF15  F009         	goto	l1315
  2216   00117A                     u640:
  2217   00117A                     l1305:
  2218                           
  2219                           ;MCAL/GPIO/hal_gbio.c: 68:         return ret;
  2220   00117A  0E00               	movlw	0
  2221   00117C  EF21  F009         	goto	l106
  2222   001180                     l1311:
  2223                           
  2224                           ;MCAL/GPIO/hal_gbio.c: 72:                 (*lat_registers[pin_config->port] &= ~((uint8
      +                          )1 << pin_config->pin));
  2225   001180  5032               	movf	gbio_pin_write_logic@pin_config^0,w,c
  2226   001182  6ED9               	movwf	fsr2l,c
  2227   001184  6ADA               	clrf	fsr2h,c
  2228   001186  50DF               	movf	223,w,c
  2229   001188  0B07               	andlw	7
  2230   00118A  6E34               	movwf	??_gbio_pin_write_logic^0,c
  2231   00118C  0E01               	movlw	1
  2232   00118E  6E35               	movwf	(??_gbio_pin_write_logic+1)^0,c
  2233   001190  2A34               	incf	??_gbio_pin_write_logic^0,f,c
  2234   001192  EFCD  F008         	goto	u654
  2235   001196                     u655:
  2236   001196  90D8               	bcf	status,0,c
  2237   001198  3635               	rlcf	(??_gbio_pin_write_logic+1)^0,f,c
  2238   00119A                     u654:
  2239   00119A  2E34               	decfsz	??_gbio_pin_write_logic^0,f,c
  2240   00119C  EFCB  F008         	goto	u655
  2241   0011A0  5035               	movf	(??_gbio_pin_write_logic+1)^0,w,c
  2242   0011A2  0AFF               	xorlw	255
  2243   0011A4  6E36               	movwf	(??_gbio_pin_write_logic+2)^0,c
  2244   0011A6  5032               	movf	gbio_pin_write_logic@pin_config^0,w,c
  2245   0011A8  6ED9               	movwf	fsr2l,c
  2246   0011AA  6ADA               	clrf	fsr2h,c
  2247   0011AC  30DF               	rrcf	223,w,c
  2248   0011AE  32E8               	rrcf	wreg,f,c
  2249   0011B0  32E8               	rrcf	wreg,f,c
  2250   0011B2  0B07               	andlw	7
  2251   0011B4  0D02               	mullw	2
  2252   0011B6  50F3               	movf	243,w,c
  2253   0011B8  0F0B               	addlw	low _lat_registers
  2254   0011BA  6ED9               	movwf	fsr2l,c
  2255   0011BC  6ADA               	clrf	fsr2h,c
  2256   0011BE  CFDE F037          	movff	postinc2,??_gbio_pin_write_logic+3
  2257   0011C2  CFDD F038          	movff	postdec2,??_gbio_pin_write_logic+4
  2258   0011C6  C037  FFD9         	movff	??_gbio_pin_write_logic+3,fsr2l
  2259   0011CA  C038  FFDA         	movff	??_gbio_pin_write_logic+4,fsr2h
  2260   0011CE  5036               	movf	(??_gbio_pin_write_logic+2)^0,w,c
  2261   0011D0  16DF               	andwf	indf2,f,c
  2262                           
  2263                           ;MCAL/GPIO/hal_gbio.c: 73:                 break;
  2264   0011D2  EF20  F009         	goto	l1317
  2265   0011D6                     l1313:
  2266                           
  2267                           ;MCAL/GPIO/hal_gbio.c: 75:                 (*lat_registers[pin_config->port] |= ((uint8)
      +                          1 << pin_config->pin));
  2268   0011D6  5032               	movf	gbio_pin_write_logic@pin_config^0,w,c
  2269   0011D8  6ED9               	movwf	fsr2l,c
  2270   0011DA  6ADA               	clrf	fsr2h,c
  2271   0011DC  50DF               	movf	223,w,c
  2272   0011DE  0B07               	andlw	7
  2273   0011E0  6E34               	movwf	??_gbio_pin_write_logic^0,c
  2274   0011E2  0E01               	movlw	1
  2275   0011E4  6E35               	movwf	(??_gbio_pin_write_logic+1)^0,c
  2276   0011E6  2A34               	incf	??_gbio_pin_write_logic^0,f,c
  2277   0011E8  EFF8  F008         	goto	u664
  2278   0011EC                     u665:
  2279   0011EC  90D8               	bcf	status,0,c
  2280   0011EE  3635               	rlcf	(??_gbio_pin_write_logic+1)^0,f,c
  2281   0011F0                     u664:
  2282   0011F0  2E34               	decfsz	??_gbio_pin_write_logic^0,f,c
  2283   0011F2  EFF6  F008         	goto	u665
  2284   0011F6  5032               	movf	gbio_pin_write_logic@pin_config^0,w,c
  2285   0011F8  6ED9               	movwf	fsr2l,c
  2286   0011FA  6ADA               	clrf	fsr2h,c
  2287   0011FC  30DF               	rrcf	223,w,c
  2288   0011FE  32E8               	rrcf	wreg,f,c
  2289   001200  32E8               	rrcf	wreg,f,c
  2290   001202  0B07               	andlw	7
  2291   001204  0D02               	mullw	2
  2292   001206  50F3               	movf	243,w,c
  2293   001208  0F0B               	addlw	low _lat_registers
  2294   00120A  6ED9               	movwf	fsr2l,c
  2295   00120C  6ADA               	clrf	fsr2h,c
  2296   00120E  CFDE F036          	movff	postinc2,??_gbio_pin_write_logic+2
  2297   001212  CFDD F037          	movff	postdec2,??_gbio_pin_write_logic+3
  2298   001216  C036  FFD9         	movff	??_gbio_pin_write_logic+2,fsr2l
  2299   00121A  C037  FFDA         	movff	??_gbio_pin_write_logic+3,fsr2h
  2300   00121E  5035               	movf	(??_gbio_pin_write_logic+1)^0,w,c
  2301   001220  12DF               	iorwf	indf2,f,c
  2302                           
  2303                           ;MCAL/GPIO/hal_gbio.c: 76:                 break;
  2304   001222  EF20  F009         	goto	l1317
  2305   001226                     l112:
  2306                           
  2307                           ;MCAL/GPIO/hal_gbio.c: 78:         }
  2308   001226  EF20  F009         	goto	l1317
  2309   00122A                     l1315:
  2310   00122A  5033               	movf	gbio_pin_write_logic@logic^0,w,c
  2311                           
  2312                           ; Switch size 1, requested type "simple"
  2313                           ; Number of cases is 2, Range of values is 0 to 1
  2314                           ; switch strategies available:
  2315                           ; Name         Instructions Cycles
  2316                           ; simple_byte            7     4 (average)
  2317                           ;	Chosen strategy is simple_byte
  2318   00122C  0A00               	xorlw	0	; case 0
  2319   00122E  B4D8               	btfsc	status,2,c
  2320   001230  EFC0  F008         	goto	l1311
  2321   001234  0A01               	xorlw	1	; case 1
  2322   001236  B4D8               	btfsc	status,2,c
  2323   001238  EFEB  F008         	goto	l1313
  2324   00123C  EF13  F009         	goto	l112
  2325   001240                     l1317:
  2326   001240                     
  2327                           ;MCAL/GPIO/hal_gbio.c: 81:     return ret;
  2328   001240  0E01               	movlw	1
  2329   001242                     l106:
  2330   001242  0012               	return		;funcret
  2331   001244                     __end_of_gbio_pin_write_logic:
  2332                           	callstack 0
  2333                           
  2334 ;; *************** function ___awmod *****************
  2335 ;; Defined at:
  2336 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  dividend        2    0[COMRAM] int 
  2339 ;;  divisor         2    2[COMRAM] int 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  sign            1    5[COMRAM] unsigned char 
  2342 ;;  counter         1    4[COMRAM] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  2    0[COMRAM] int 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        6 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_counter
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text11
  2366   0013D8                     __ptext11:
  2367                           	callstack 0
  2368   0013D8                     ___awmod:
  2369                           	callstack 29
  2370   0013D8  6A37               	clrf	___awmod@sign^0,c
  2371   0013DA  BE33               	btfsc	(___awmod@dividend+1)^0,7,c
  2372   0013DC  EFF4  F009         	goto	u880
  2373   0013E0  EFF2  F009         	goto	u881
  2374   0013E4                     u881:
  2375   0013E4  EFFA  F009         	goto	l1461
  2376   0013E8                     u880:
  2377   0013E8  6C32               	negf	___awmod@dividend^0,c
  2378   0013EA  1E33               	comf	(___awmod@dividend+1)^0,f,c
  2379   0013EC  B0D8               	btfsc	status,0,c
  2380   0013EE  2A33               	incf	(___awmod@dividend+1)^0,f,c
  2381   0013F0  0E01               	movlw	1
  2382   0013F2  6E37               	movwf	___awmod@sign^0,c
  2383   0013F4                     l1461:
  2384   0013F4  BE35               	btfsc	(___awmod@divisor+1)^0,7,c
  2385   0013F6  EF01  F00A         	goto	u890
  2386   0013FA  EFFF  F009         	goto	u891
  2387   0013FE                     u891:
  2388   0013FE  EF05  F00A         	goto	l1465
  2389   001402                     u890:
  2390   001402  6C34               	negf	___awmod@divisor^0,c
  2391   001404  1E35               	comf	(___awmod@divisor+1)^0,f,c
  2392   001406  B0D8               	btfsc	status,0,c
  2393   001408  2A35               	incf	(___awmod@divisor+1)^0,f,c
  2394   00140A                     l1465:
  2395   00140A  5034               	movf	___awmod@divisor^0,w,c
  2396   00140C  1035               	iorwf	(___awmod@divisor+1)^0,w,c
  2397   00140E  B4D8               	btfsc	status,2,c
  2398   001410  EF0C  F00A         	goto	u901
  2399   001414  EF0E  F00A         	goto	u900
  2400   001418                     u901:
  2401   001418  EF32  F00A         	goto	l1481
  2402   00141C                     u900:
  2403   00141C  0E01               	movlw	1
  2404   00141E  6E36               	movwf	___awmod@counter^0,c
  2405   001420  EF16  F00A         	goto	l1471
  2406   001424                     l1469:
  2407   001424  90D8               	bcf	status,0,c
  2408   001426  3634               	rlcf	___awmod@divisor^0,f,c
  2409   001428  3635               	rlcf	(___awmod@divisor+1)^0,f,c
  2410   00142A  2A36               	incf	___awmod@counter^0,f,c
  2411   00142C                     l1471:
  2412   00142C  AE35               	btfss	(___awmod@divisor+1)^0,7,c
  2413   00142E  EF1B  F00A         	goto	u911
  2414   001432  EF1D  F00A         	goto	u910
  2415   001436                     u911:
  2416   001436  EF12  F00A         	goto	l1469
  2417   00143A                     u910:
  2418   00143A                     l1473:
  2419   00143A  5034               	movf	___awmod@divisor^0,w,c
  2420   00143C  5C32               	subwf	___awmod@dividend^0,w,c
  2421   00143E  5035               	movf	(___awmod@divisor+1)^0,w,c
  2422   001440  5833               	subwfb	(___awmod@dividend+1)^0,w,c
  2423   001442  A0D8               	btfss	status,0,c
  2424   001444  EF26  F00A         	goto	u921
  2425   001448  EF28  F00A         	goto	u920
  2426   00144C                     u921:
  2427   00144C  EF2C  F00A         	goto	l1477
  2428   001450                     u920:
  2429   001450  5034               	movf	___awmod@divisor^0,w,c
  2430   001452  5E32               	subwf	___awmod@dividend^0,f,c
  2431   001454  5035               	movf	(___awmod@divisor+1)^0,w,c
  2432   001456  5A33               	subwfb	(___awmod@dividend+1)^0,f,c
  2433   001458                     l1477:
  2434   001458  90D8               	bcf	status,0,c
  2435   00145A  3235               	rrcf	(___awmod@divisor+1)^0,f,c
  2436   00145C  3234               	rrcf	___awmod@divisor^0,f,c
  2437   00145E  2E36               	decfsz	___awmod@counter^0,f,c
  2438   001460  EF1D  F00A         	goto	l1473
  2439   001464                     l1481:
  2440   001464  5037               	movf	___awmod@sign^0,w,c
  2441   001466  B4D8               	btfsc	status,2,c
  2442   001468  EF38  F00A         	goto	u931
  2443   00146C  EF3A  F00A         	goto	u930
  2444   001470                     u931:
  2445   001470  EF3E  F00A         	goto	l1485
  2446   001474                     u930:
  2447   001474  6C32               	negf	___awmod@dividend^0,c
  2448   001476  1E33               	comf	(___awmod@dividend+1)^0,f,c
  2449   001478  B0D8               	btfsc	status,0,c
  2450   00147A  2A33               	incf	(___awmod@dividend+1)^0,f,c
  2451   00147C                     l1485:
  2452   00147C  C032  F032         	movff	___awmod@dividend,?___awmod
  2453   001480  C033  F033         	movff	___awmod@dividend+1,?___awmod+1
  2454   001484  0012               	return		;funcret
  2455   001486                     __end_of___awmod:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function ___awdiv *****************
  2459 ;; Defined at:
  2460 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  dividend        2    0[COMRAM] int 
  2463 ;;  divisor         2    2[COMRAM] int 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  quotient        2    6[COMRAM] int 
  2466 ;;  sign            1    5[COMRAM] unsigned char 
  2467 ;;  counter         1    4[COMRAM] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2    0[COMRAM] int 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;Total ram usage:        8 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_counter
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text12
  2491   001316                     __ptext12:
  2492                           	callstack 0
  2493   001316                     ___awdiv:
  2494                           	callstack 29
  2495   001316  6A37               	clrf	___awdiv@sign^0,c
  2496   001318  BE35               	btfsc	(___awdiv@divisor+1)^0,7,c
  2497   00131A  EF93  F009         	goto	u820
  2498   00131E  EF91  F009         	goto	u821
  2499   001322                     u821:
  2500   001322  EF99  F009         	goto	l1417
  2501   001326                     u820:
  2502   001326  6C34               	negf	___awdiv@divisor^0,c
  2503   001328  1E35               	comf	(___awdiv@divisor+1)^0,f,c
  2504   00132A  B0D8               	btfsc	status,0,c
  2505   00132C  2A35               	incf	(___awdiv@divisor+1)^0,f,c
  2506   00132E  0E01               	movlw	1
  2507   001330  6E37               	movwf	___awdiv@sign^0,c
  2508   001332                     l1417:
  2509   001332  BE33               	btfsc	(___awdiv@dividend+1)^0,7,c
  2510   001334  EFA0  F009         	goto	u830
  2511   001338  EF9E  F009         	goto	u831
  2512   00133C                     u831:
  2513   00133C  EFA6  F009         	goto	l1423
  2514   001340                     u830:
  2515   001340  6C32               	negf	___awdiv@dividend^0,c
  2516   001342  1E33               	comf	(___awdiv@dividend+1)^0,f,c
  2517   001344  B0D8               	btfsc	status,0,c
  2518   001346  2A33               	incf	(___awdiv@dividend+1)^0,f,c
  2519   001348  0E01               	movlw	1
  2520   00134A  1A37               	xorwf	___awdiv@sign^0,f,c
  2521   00134C                     l1423:
  2522   00134C  0E00               	movlw	0
  2523   00134E  6E39               	movwf	(___awdiv@quotient+1)^0,c
  2524   001350  0E00               	movlw	0
  2525   001352  6E38               	movwf	___awdiv@quotient^0,c
  2526   001354  5034               	movf	___awdiv@divisor^0,w,c
  2527   001356  1035               	iorwf	(___awdiv@divisor+1)^0,w,c
  2528   001358  B4D8               	btfsc	status,2,c
  2529   00135A  EFB1  F009         	goto	u841
  2530   00135E  EFB3  F009         	goto	u840
  2531   001362                     u841:
  2532   001362  EFDB  F009         	goto	l1445
  2533   001366                     u840:
  2534   001366  0E01               	movlw	1
  2535   001368  6E36               	movwf	___awdiv@counter^0,c
  2536   00136A  EFBB  F009         	goto	l1431
  2537   00136E                     l1429:
  2538   00136E  90D8               	bcf	status,0,c
  2539   001370  3634               	rlcf	___awdiv@divisor^0,f,c
  2540   001372  3635               	rlcf	(___awdiv@divisor+1)^0,f,c
  2541   001374  2A36               	incf	___awdiv@counter^0,f,c
  2542   001376                     l1431:
  2543   001376  AE35               	btfss	(___awdiv@divisor+1)^0,7,c
  2544   001378  EFC0  F009         	goto	u851
  2545   00137C  EFC2  F009         	goto	u850
  2546   001380                     u851:
  2547   001380  EFB7  F009         	goto	l1429
  2548   001384                     u850:
  2549   001384                     l1433:
  2550   001384  90D8               	bcf	status,0,c
  2551   001386  3638               	rlcf	___awdiv@quotient^0,f,c
  2552   001388  3639               	rlcf	(___awdiv@quotient+1)^0,f,c
  2553   00138A  5034               	movf	___awdiv@divisor^0,w,c
  2554   00138C  5C32               	subwf	___awdiv@dividend^0,w,c
  2555   00138E  5035               	movf	(___awdiv@divisor+1)^0,w,c
  2556   001390  5833               	subwfb	(___awdiv@dividend+1)^0,w,c
  2557   001392  A0D8               	btfss	status,0,c
  2558   001394  EFCE  F009         	goto	u861
  2559   001398  EFD0  F009         	goto	u860
  2560   00139C                     u861:
  2561   00139C  EFD5  F009         	goto	l1441
  2562   0013A0                     u860:
  2563   0013A0  5034               	movf	___awdiv@divisor^0,w,c
  2564   0013A2  5E32               	subwf	___awdiv@dividend^0,f,c
  2565   0013A4  5035               	movf	(___awdiv@divisor+1)^0,w,c
  2566   0013A6  5A33               	subwfb	(___awdiv@dividend+1)^0,f,c
  2567   0013A8  8038               	bsf	___awdiv@quotient^0,0,c
  2568   0013AA                     l1441:
  2569   0013AA  90D8               	bcf	status,0,c
  2570   0013AC  3235               	rrcf	(___awdiv@divisor+1)^0,f,c
  2571   0013AE  3234               	rrcf	___awdiv@divisor^0,f,c
  2572   0013B0  2E36               	decfsz	___awdiv@counter^0,f,c
  2573   0013B2  EFC2  F009         	goto	l1433
  2574   0013B6                     l1445:
  2575   0013B6  5037               	movf	___awdiv@sign^0,w,c
  2576   0013B8  B4D8               	btfsc	status,2,c
  2577   0013BA  EFE1  F009         	goto	u871
  2578   0013BE  EFE3  F009         	goto	u870
  2579   0013C2                     u871:
  2580   0013C2  EFE7  F009         	goto	l1449
  2581   0013C6                     u870:
  2582   0013C6  6C38               	negf	___awdiv@quotient^0,c
  2583   0013C8  1E39               	comf	(___awdiv@quotient+1)^0,f,c
  2584   0013CA  B0D8               	btfsc	status,0,c
  2585   0013CC  2A39               	incf	(___awdiv@quotient+1)^0,f,c
  2586   0013CE                     l1449:
  2587   0013CE  C038  F032         	movff	___awdiv@quotient,?___awdiv
  2588   0013D2  C039  F033         	movff	___awdiv@quotient+1,?___awdiv+1
  2589   0013D6  0012               	return		;funcret
  2590   0013D8                     __end_of___awdiv:
  2591                           	callstack 0
  2592                           
  2593                           	psect	smallconst
  2594   001000                     __psmallconst:
  2595                           	callstack 0
  2596   001000  00                 	db	0
  2597   001001  00                 	db	0	; dummy byte at the end
  2598   001000                     __smallconst    set	__psmallconst
  2599   001000                     __mediumconst   set	__psmallconst
  2600   000002                     __activetblptr  equ	2
  2601                           
  2602                           	psect	rparam
  2603   000001                     ___rparam_used  equ	1
  2604   000000                     ___param_bank   equ	0
  2605   000000                     __Lparam        equ	__Lrparam
  2606   000000                     __Hparam        equ	__Hrparam
  2607                           
  2608                           	psect	config
  2609                           
  2610                           ; Padding undefined space
  2611   300000                     	org	3145728
  2612   300000  FF                 	db	255
  2613                           
  2614                           ;Config register CONFIG1H @ 0x300001
  2615                           ;	Oscillator Selection bits
  2616                           ;	OSC = HS, HS oscillator
  2617                           ;	Fail-Safe Clock Monitor Enable bit
  2618                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2619                           ;	Internal/External Oscillator Switchover bit
  2620                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2621   300001                     	org	3145729
  2622   300001  02                 	db	2
  2623                           
  2624                           ;Config register CONFIG2L @ 0x300002
  2625                           ;	Power-up Timer Enable bit
  2626                           ;	PWRT = OFF, PWRT disabled
  2627                           ;	Brown-out Reset Enable bits
  2628                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2629                           ;	Brown Out Reset Voltage bits
  2630                           ;	BORV = 1, 
  2631   300002                     	org	3145730
  2632   300002  09                 	db	9
  2633                           
  2634                           ;Config register CONFIG2H @ 0x300003
  2635                           ;	Watchdog Timer Enable bit
  2636                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2637                           ;	Watchdog Timer Postscale Select bits
  2638                           ;	WDTPS = 32768, 1:32768
  2639   300003                     	org	3145731
  2640   300003  1E                 	db	30
  2641                           
  2642                           ; Padding undefined space
  2643   300004                     	org	3145732
  2644   300004  FF                 	db	255
  2645                           
  2646                           ;Config register CONFIG3H @ 0x300005
  2647                           ;	CCP2 MUX bit
  2648                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2649                           ;	PORTB A/D Enable bit
  2650                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2651                           ;	Low-Power Timer1 Oscillator Enable bit
  2652                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2653                           ;	MCLR Pin Enable bit
  2654                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2655   300005                     	org	3145733
  2656   300005  81                 	db	129
  2657                           
  2658                           ;Config register CONFIG4L @ 0x300006
  2659                           ;	Stack Full/Underflow Reset Enable bit
  2660                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2661                           ;	Single-Supply ICSP Enable bit
  2662                           ;	LVP = OFF, Single-Supply ICSP disabled
  2663                           ;	Extended Instruction Set Enable bit
  2664                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2665                           ;	Background Debugger Enable bit
  2666                           ;	DEBUG = 0x1, unprogrammed default
  2667   300006                     	org	3145734
  2668   300006  81                 	db	129
  2669                           
  2670                           ; Padding undefined space
  2671   300007                     	org	3145735
  2672   300007  FF                 	db	255
  2673                           
  2674                           ;Config register CONFIG5L @ 0x300008
  2675                           ;	Code Protection bit
  2676                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2677                           ;	Code Protection bit
  2678                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2679                           ;	Code Protection bit
  2680                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2681                           ;	Code Protection bit
  2682                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2683   300008                     	org	3145736
  2684   300008  0F                 	db	15
  2685                           
  2686                           ;Config register CONFIG5H @ 0x300009
  2687                           ;	Boot Block Code Protection bit
  2688                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2689                           ;	Data EEPROM Code Protection bit
  2690                           ;	CPD = OFF, Data EEPROM not code-protected
  2691   300009                     	org	3145737
  2692   300009  C0                 	db	192
  2693                           
  2694                           ;Config register CONFIG6L @ 0x30000A
  2695                           ;	Write Protection bit
  2696                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2697                           ;	Write Protection bit
  2698                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2699                           ;	Write Protection bit
  2700                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2701                           ;	Write Protection bit
  2702                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2703   30000A                     	org	3145738
  2704   30000A  0F                 	db	15
  2705                           
  2706                           ;Config register CONFIG6H @ 0x30000B
  2707                           ;	Configuration Register Write Protection bit
  2708                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2709                           ;	Boot Block Write Protection bit
  2710                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2711                           ;	Data EEPROM Write Protection bit
  2712                           ;	WRTD = OFF, Data EEPROM not write-protected
  2713   30000B                     	org	3145739
  2714   30000B  E0                 	db	224
  2715                           
  2716                           ;Config register CONFIG7L @ 0x30000C
  2717                           ;	Table Read Protection bit
  2718                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2719                           ;	Table Read Protection bit
  2720                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2721                           ;	Table Read Protection bit
  2722                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2723                           ;	Table Read Protection bit
  2724                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2725   30000C                     	org	3145740
  2726   30000C  0F                 	db	15
  2727                           
  2728                           ;Config register CONFIG7H @ 0x30000D
  2729                           ;	Boot Block Table Read Protection bit
  2730                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2731   30000D                     	org	3145741
  2732   30000D  40                 	db	64
  2733                           tosu	equ	0xFFF
  2734                           tosh	equ	0xFFE
  2735                           tosl	equ	0xFFD
  2736                           stkptr	equ	0xFFC
  2737                           pclatu	equ	0xFFB
  2738                           pclath	equ	0xFFA
  2739                           pcl	equ	0xFF9
  2740                           tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           prodh	equ	0xFF4
  2745                           prodl	equ	0xFF3
  2746                           indf0	equ	0xFEF
  2747                           postinc0	equ	0xFEE
  2748                           postdec0	equ	0xFED
  2749                           preinc0	equ	0xFEC
  2750                           plusw0	equ	0xFEB
  2751                           fsr0h	equ	0xFEA
  2752                           fsr0l	equ	0xFE9
  2753                           wreg	equ	0xFE8
  2754                           indf1	equ	0xFE7
  2755                           postinc1	equ	0xFE6
  2756                           postdec1	equ	0xFE5
  2757                           preinc1	equ	0xFE4
  2758                           plusw1	equ	0xFE3
  2759                           fsr1h	equ	0xFE2
  2760                           fsr1l	equ	0xFE1
  2761                           bsr	equ	0xFE0
  2762                           indf2	equ	0xFDF
  2763                           postinc2	equ	0xFDE
  2764                           postdec2	equ	0xFDD
  2765                           preinc2	equ	0xFDC
  2766                           plusw2	equ	0xFDB
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        49
    BSS         5
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     15      70
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gbio_pin_direction_init@pin_config	PTR const struct . size(1) Largest target is 5
		 -> enable_ssegment1(COMRAM[1]), enable_ssegment2(COMRAM[1]), led_init@pin_obj(COMRAM[1]), ssegment(COMRAM[5]), 
		 -> ssegment$pins(COMRAM[4]), 

    gbio_pin_init@pin_config	PTR const struct . size(1) Largest target is 5
		 -> enable_ssegment1(COMRAM[1]), enable_ssegment2(COMRAM[1]), led_init@pin_obj(COMRAM[1]), ssegment(COMRAM[5]), 
		 -> ssegment$pins(COMRAM[4]), 

    gbio_pin_write_logic@pin_config	PTR const struct . size(1) Largest target is 5
		 -> enable_ssegment1(COMRAM[1]), enable_ssegment2(COMRAM[1]), led_init@pin_obj(COMRAM[1]), led_off@pin_obj(COMRAM[1]), 
		 -> led_on@pin_obj(COMRAM[1]), ssegment(COMRAM[5]), ssegment$pins(COMRAM[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    led_init@led	PTR const struct . size(1) Largest target is 1
		 -> green_led(COMRAM[1]), red_led(COMRAM[1]), yellow_led(COMRAM[1]), 

    led_off@led	PTR const struct . size(1) Largest target is 1
		 -> green_led(COMRAM[1]), red_led(COMRAM[1]), yellow_led(COMRAM[1]), 

    led_on@led	PTR const struct . size(1) Largest target is 1
		 -> green_led(COMRAM[1]), red_led(COMRAM[1]), yellow_led(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    seven_segment_init@ssegment	PTR const struct . size(1) Largest target is 5
		 -> ssegment(COMRAM[5]), 

    seven_segment_write_number@ssegment	PTR const struct . size(1) Largest target is 5
		 -> ssegment(COMRAM[5]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 


Critical Paths under _main in COMRAM

    _main->_counter
    _led_on->_gbio_pin_write_logic
    _led_off->_gbio_pin_write_logic
    _init->_led_init
    _seven_segment_init->_gbio_pin_init
    _led_init->_gbio_pin_init
    _gbio_pin_init->_gbio_pin_write_logic
    _counter->_seven_segment_write_number
    _seven_segment_write_number->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4564
                            _counter
                               _init
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (1) _led_on                                               4     3      1     398
                                              7 COMRAM     4     3      1
               _gbio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_off                                              4     3      1     398
                                              7 COMRAM     4     3      1
               _gbio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    2275
                      _gbio_pin_init
                           _led_init
                 _seven_segment_init
 ---------------------------------------------------------------------------------
 (2) _seven_segment_init                                   2     1      1     798
                                             10 COMRAM     2     1      1
                      _gbio_pin_init
 ---------------------------------------------------------------------------------
 (2) _led_init                                             4     3      1     818
                                             10 COMRAM     4     3      1
                      _gbio_pin_init
 ---------------------------------------------------------------------------------
 (3) _gbio_pin_init                                        3     2      1     659
                                              7 COMRAM     3     2      1
            _gbio_pin_direction_init
               _gbio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gbio_pin_direction_init                              7     6      1     224
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _counter                                              3     3      0    1493
                                             12 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
               _gbio_pin_write_logic
         _seven_segment_write_number
 ---------------------------------------------------------------------------------
 (2) _seven_segment_write_number                           4     2      2     530
                                              8 COMRAM     4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gbio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gbio_pin_write_logic                                 8     6      2     249
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _counter
     ___awdiv
     ___awmod
     _gbio_pin_write_logic
     _seven_segment_write_number
       ___awdiv (ARG)
       ___awmod (ARG)
       _gbio_pin_write_logic (ARG)
   _init
     _gbio_pin_init
       _gbio_pin_direction_init
       _gbio_pin_write_logic
     _led_init
       _gbio_pin_init
     _seven_segment_init
       _gbio_pin_init
   _led_off
     _gbio_pin_write_logic
   _led_on
     _gbio_pin_write_logic

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     15      70     55.1%
BITBIGSFRh         118      0       0      0.0%
BITBIGSFRl           4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      70      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri May 30 20:49:59 2025

                                 l9 1688                                  l20 1588  
                                l13 16E0                                  l23 15A0  
                                l16 152C                                  l27 15FC  
                                l80 1670                                  l93 10FA  
                                l87 112C                                  l88 112A  
                      ___awdiv@sign 0037                                 l112 1226  
                               l106 1242                                 l107 1240  
                               l203 16E6                                 l222 14A6  
                               l225 1514                                 l217 177A  
                               l190 17B8                                 l198 1314  
                               l472 1484                                 l459 13D6  
                               u620 113E                                 u621 113A  
                               u630 115A                                 u631 1156  
                               u640 117A                                 u800 14A6  
                               u720 1114                                 u704 106E  
                               u641 1176                                 u801 14A2  
                               u721 110E                                 u705 106A  
                               u810 14C4                                 u714 10C4  
                               u730 160E                                 u811 14C0  
                               u715 10C0                                 u731 160A  
                               u820 1326                                 u900 141C  
                               u740 162A                                 u821 1322  
                               u901 1418                                 u741 1626  
                               u830 1340                                 u910 143A  
                               u654 119A                                 u726 1116  
                               u670 1012                                 u750 1646  
                               u831 133C                                 u911 1436  
                               u655 1196                                 u671 100E  
                               u751 1642                                 u840 1366  
                               u920 1450                                 u664 11F0  
                               u680 102E                                 u760 1682  
                               u841 1362                                 u921 144C  
                               u665 11EC                                 u681 102A  
                               u761 167E                                 u850 1384  
                               u930 1474                                 u690 104E  
                               u851 1380                                 u931 1470  
                               u691 104A                                 u860 13A0  
                               u780 1746                                 u940 1526  
                               u861 139C                                 u781 1742  
                               u941 1522                                 u870 13C6  
                               u790 1496                                 u871 13C2  
                               u791 1492                                 u775 16D0  
                               u880 13E8                                 u960 159A  
                               u881 13E4                                 u777 16D2  
                               u961 1596                                 u890 1402  
                               u891 13FE                                 u955 1574  
                               u980 1302                                 u981 12FE  
                               u957 1576                                 u990 1314  
                               u991 1310                                 u975 15E8  
                               u977 15EA                                 _ret 0046  
                      ___awmod@sign 0037                                 wreg 0FE8  
       ?_seven_segment_write_number 003A                         led_on@F3017 0043  
                              l1301 113E                                l1311 1180  
                              l1303 115A                                l1313 11D6  
                              l1305 117A                                l1401 14D6  
                              l1321 1002                                l1411 1318  
                              l1315 122A                                l1403 14E8  
                              l1323 1002                                l1421 1348  
                              l1413 1326                                l1317 1240  
                              l1405 14FE                                l1341 112A  
                              l1325 1012                                l1501 1586  
                              l1431 1376                                l1423 134C  
                              l1415 132E                                l1335 1054  
                              l1327 102E                                l1351 162A  
                              l1511 15DA                                l1441 13AA  
                              l1433 1384                                l1425 1354  
                              l1417 1332                                l1409 1316  
                              l1337 10AA                                l1329 104E  
                              l1361 166E                                l1353 1646  
                              l1345 15FE                                l1521 177C  
                              l1513 15EA                                l1505 158A  
                              l1443 13B0                                l1435 138A  
                              l1427 1366                                l1419 1340  
                              l1531 1292                                l1523 1244  
                              l1339 10FE                                l1347 15FE  
                              l1371 16C2                                l1515 15EC  
                              l1507 159A                                l1437 13A0  
                              l1429 136E                                l1445 13B6  
                              l1461 13F4                                l1453 13D8  
                              l1541 12F0                                l1533 12A0  
                              l1525 124C                                l1349 160E  
                              l1373 16D2                                l1365 1672  
                              l1381 1736                                l1509 15A4  
                              l1517 15FA                                l1447 13C6  
                              l1439 13A8                                l1471 142C  
                              l1463 1402                                l1455 13DA  
                              l1391 1486                                l1543 12F2  
                              l1535 12AC                                l1359 164C  
                              l1375 16D4                                l1367 1682  
                              l1383 1746                                l1449 13CE  
                              l1473 143A                                l1481 1464  
                              l1465 140A                                l1457 13E8  
                              l1297 112E                                l1393 1496  
                              l1545 1302                                l1537 12CA  
                              l1529 1250                                l1369 168C  
                              l1377 16DE                                l1385 174C  
                              l1483 1474                                l1475 1450  
                              l1467 141C                                l1459 13F0  
                              l1299 112E                                l1395 14AA  
                              l1539 12E4                                l1547 1304  
                              l1387 1778                                l1491 1526  
                              l1485 147C                                l1477 1458  
                              l1469 1424                                l1397 14C4  
                              l1493 1530                                l1549 16E2  
                              l1479 145E                                l1399 14C6  
                              l1495 1566                                l1497 1576  
                              l1489 1516                                l1499 1578  
                              u1007 1298                                u1017 12DC  
                              _LATA 0F89                                _LATB 0F8A  
                              _LATC 0F8B                                _LATD 0F8C  
                              _LATE 0F8D                                _main 16E2  
                              _init 177C                                fsr2h 0FDA  
                              indf2 0FDF                                fsr1l 0FE1  
                              fsr2l 0FD9          seven_segment_init@ssegment 003C  
                              prodl 0FF3                                start FFFC  
                       led_init@led 003C                         led_init@ret 003E  
                      ___param_bank 0000                               ?_main 0032  
                             ?_init 0032                     __end_of___awdiv 13D8  
                   __end_of___awmod 1486                        led_off@F3022 0042  
                   ___awdiv@divisor 0034                     ___awdiv@counter 0036  
                             _PORTA 0F80                               _PORTB 0F81  
                             _PORTC 0F82                               _PORTD 0F83  
                             _PORTE 0F84                               _TRISA 0F92  
                             _TRISB 0F93                               _TRISC 0F94  
                             _TRISD 0F95                               _TRISE 0F96  
    gbio_pin_write_logic@pin_config 0032                     __end_of_led_off 15FE  
                   __end_of_counter 1316                               tablat 0FF5  
                             status 0FD8                     __initialization 17BA  
                      __end_of_main 1736                        __end_of_init 17BA  
                     _lat_registers 000B                              ??_main 0041  
                            ??_init 0040                       __activetblptr 0002  
                  ___awdiv@dividend 0032             _gbio_pin_direction_init 1002  
                  __end_of_led_init 16E2                           ??___awdiv 0036  
                         ??___awmod 0036                              _led_on 1516  
                  ___awdiv@quotient 0038                     ___awmod@divisor 0034  
                            isa$std 0001                     ___awmod@counter 0036  
                         ??_led_off 003A                       led_init@F3012 0044  
                         ??_counter 003E                        __pdataCOMRAM 0001  
             seven_segment_init@ret 003D                       led_on@pin_obj 003C  
                      __mediumconst 1000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
      __end_of_gbio_pin_write_logic 1244             gbio_pin_init@pin_config 0039  
                        __accesstop 0080             __end_of__initialization 17E4  
                _seven_segment_init 1736                       ___rparam_used 0001  
             __end_of_gbio_pin_init 1672                      __pcstackCOMRAM 0032  
               ?_seven_segment_init 003C                ??_seven_segment_init 003D  
                  _enable_ssegment1 0045                    _enable_ssegment2 002E  
         ??_gbio_pin_direction_init 0033                          __pnvCOMRAM 0046  
seven_segment_write_number@ssegment 003A                             ?_led_on 0039  
                   led_toggle@F3027 0041                           ?_led_init 003C  
                    _tris_registers 0015                             __Hparam 0000  
                           __Lparam 0000                             ___awdiv 1316  
                           ___awmod 13D8                _gbio_pin_write_logic 112E  
                      __psmallconst 1000                             __pcinit 17BA  
                           __ramtop 1000     __end_of_gbio_pin_direction_init 112E  
                           __ptext0 16E2                             __ptext1 1516  
                           __ptext2 158A                             __ptext3 177C  
                           __ptext4 1736                             __ptext5 1672  
                           __ptext6 15FE                             __ptext7 1002  
                           __ptext8 1244                             __ptext9 1486  
                           _led_off 158A                             _counter 1244  
                           _red_led 0031                    ___awmod@dividend 0032  
                        ??_led_init 003D                end_of_initialization 17E4  
                     __Lmediumconst 0000                      led_off@pin_obj 003C  
             ?_gbio_pin_write_logic 0032                             postdec1 0FE5  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc2 0FDE   gbio_pin_direction_init@pin_config 0032  
                        _yellow_led 0030                          led_off@led 0039  
                        led_off@ret 003B                       __pidataCOMRAM 17EE  
                    __end_of_led_on 158A                 start_initialization 17BA  
      ??_seven_segment_write_number 003C                       counter@number 0040  
            ??_gbio_pin_write_logic 0034                            ??_led_on 003A  
                       __pbssCOMRAM 0041                           _bcd_codes 0001  
                          ?___awdiv 0032                            ?___awmod 0032  
                          ?_led_off 0039                         __smallconst 1000  
                          ?_counter 0032                           _green_led 002F  
          ?_gbio_pin_direction_init 0032                       _gbio_pin_init 15FE  
__end_of_seven_segment_write_number 1516          _seven_segment_write_number 1486  
                         led_on@led 0039                           led_on@ret 003B  
                         copy_data0 17CE                            __Hrparam 0000  
                    ?_gbio_pin_init 0039                            __Lrparam 0000  
     seven_segment_write_number@ret 003D                            __ptext10 112E  
                          __ptext11 13D8                            __ptext12 1316  
                          _led_init 1672                            isa$xinst 0000  
                          _ssegment 0029    seven_segment_write_number@number 003B  
                          counter@i 003F           gbio_pin_write_logic@logic 0033  
                  gbio_pin_init@ret 003B                     ??_gbio_pin_init 003A  
                    _port_registers 001F          __end_of_seven_segment_init 177C  
                   led_init@pin_obj 003F  
